//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupAssignmentSchedule) DeepCopyInto(out *PrivilegedAccessGroupAssignmentSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupAssignmentSchedule.
func (in *PrivilegedAccessGroupAssignmentSchedule) DeepCopy() *PrivilegedAccessGroupAssignmentSchedule {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupAssignmentSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegedAccessGroupAssignmentSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupAssignmentScheduleInitParameters) DeepCopyInto(out *PrivilegedAccessGroupAssignmentScheduleInitParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupAssignmentScheduleInitParameters.
func (in *PrivilegedAccessGroupAssignmentScheduleInitParameters) DeepCopy() *PrivilegedAccessGroupAssignmentScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupAssignmentScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupAssignmentScheduleList) DeepCopyInto(out *PrivilegedAccessGroupAssignmentScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivilegedAccessGroupAssignmentSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupAssignmentScheduleList.
func (in *PrivilegedAccessGroupAssignmentScheduleList) DeepCopy() *PrivilegedAccessGroupAssignmentScheduleList {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupAssignmentScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegedAccessGroupAssignmentScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupAssignmentScheduleObservation) DeepCopyInto(out *PrivilegedAccessGroupAssignmentScheduleObservation) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupAssignmentScheduleObservation.
func (in *PrivilegedAccessGroupAssignmentScheduleObservation) DeepCopy() *PrivilegedAccessGroupAssignmentScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupAssignmentScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupAssignmentScheduleParameters) DeepCopyInto(out *PrivilegedAccessGroupAssignmentScheduleParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupAssignmentScheduleParameters.
func (in *PrivilegedAccessGroupAssignmentScheduleParameters) DeepCopy() *PrivilegedAccessGroupAssignmentScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupAssignmentScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupAssignmentScheduleSpec) DeepCopyInto(out *PrivilegedAccessGroupAssignmentScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupAssignmentScheduleSpec.
func (in *PrivilegedAccessGroupAssignmentScheduleSpec) DeepCopy() *PrivilegedAccessGroupAssignmentScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupAssignmentScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupAssignmentScheduleStatus) DeepCopyInto(out *PrivilegedAccessGroupAssignmentScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupAssignmentScheduleStatus.
func (in *PrivilegedAccessGroupAssignmentScheduleStatus) DeepCopy() *PrivilegedAccessGroupAssignmentScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupAssignmentScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupEligibilitySchedule) DeepCopyInto(out *PrivilegedAccessGroupEligibilitySchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupEligibilitySchedule.
func (in *PrivilegedAccessGroupEligibilitySchedule) DeepCopy() *PrivilegedAccessGroupEligibilitySchedule {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupEligibilitySchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegedAccessGroupEligibilitySchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupEligibilityScheduleInitParameters) DeepCopyInto(out *PrivilegedAccessGroupEligibilityScheduleInitParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupEligibilityScheduleInitParameters.
func (in *PrivilegedAccessGroupEligibilityScheduleInitParameters) DeepCopy() *PrivilegedAccessGroupEligibilityScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupEligibilityScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupEligibilityScheduleList) DeepCopyInto(out *PrivilegedAccessGroupEligibilityScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivilegedAccessGroupEligibilitySchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupEligibilityScheduleList.
func (in *PrivilegedAccessGroupEligibilityScheduleList) DeepCopy() *PrivilegedAccessGroupEligibilityScheduleList {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupEligibilityScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegedAccessGroupEligibilityScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupEligibilityScheduleObservation) DeepCopyInto(out *PrivilegedAccessGroupEligibilityScheduleObservation) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupEligibilityScheduleObservation.
func (in *PrivilegedAccessGroupEligibilityScheduleObservation) DeepCopy() *PrivilegedAccessGroupEligibilityScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupEligibilityScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupEligibilityScheduleParameters) DeepCopyInto(out *PrivilegedAccessGroupEligibilityScheduleParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupEligibilityScheduleParameters.
func (in *PrivilegedAccessGroupEligibilityScheduleParameters) DeepCopy() *PrivilegedAccessGroupEligibilityScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupEligibilityScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupEligibilityScheduleSpec) DeepCopyInto(out *PrivilegedAccessGroupEligibilityScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupEligibilityScheduleSpec.
func (in *PrivilegedAccessGroupEligibilityScheduleSpec) DeepCopy() *PrivilegedAccessGroupEligibilityScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupEligibilityScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessGroupEligibilityScheduleStatus) DeepCopyInto(out *PrivilegedAccessGroupEligibilityScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessGroupEligibilityScheduleStatus.
func (in *PrivilegedAccessGroupEligibilityScheduleStatus) DeepCopy() *PrivilegedAccessGroupEligibilityScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessGroupEligibilityScheduleStatus)
	in.DeepCopyInto(out)
	return out
}
