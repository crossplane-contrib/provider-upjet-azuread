//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIInitParameters) DeepCopyInto(out *APIInitParameters) {
	*out = *in
	if in.KnownClientApplications != nil {
		in, out := &in.KnownClientApplications, &out.KnownClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MappedClaimsEnabled != nil {
		in, out := &in.MappedClaimsEnabled, &out.MappedClaimsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2PermissionScope != nil {
		in, out := &in.Oauth2PermissionScope, &out.Oauth2PermissionScope
		*out = make([]Oauth2PermissionScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestedAccessTokenVersion != nil {
		in, out := &in.RequestedAccessTokenVersion, &out.RequestedAccessTokenVersion
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIInitParameters.
func (in *APIInitParameters) DeepCopy() *APIInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIObservation) DeepCopyInto(out *APIObservation) {
	*out = *in
	if in.KnownClientApplications != nil {
		in, out := &in.KnownClientApplications, &out.KnownClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MappedClaimsEnabled != nil {
		in, out := &in.MappedClaimsEnabled, &out.MappedClaimsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2PermissionScope != nil {
		in, out := &in.Oauth2PermissionScope, &out.Oauth2PermissionScope
		*out = make([]Oauth2PermissionScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestedAccessTokenVersion != nil {
		in, out := &in.RequestedAccessTokenVersion, &out.RequestedAccessTokenVersion
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIObservation.
func (in *APIObservation) DeepCopy() *APIObservation {
	if in == nil {
		return nil
	}
	out := new(APIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIParameters) DeepCopyInto(out *APIParameters) {
	*out = *in
	if in.KnownClientApplications != nil {
		in, out := &in.KnownClientApplications, &out.KnownClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MappedClaimsEnabled != nil {
		in, out := &in.MappedClaimsEnabled, &out.MappedClaimsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2PermissionScope != nil {
		in, out := &in.Oauth2PermissionScope, &out.Oauth2PermissionScope
		*out = make([]Oauth2PermissionScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestedAccessTokenVersion != nil {
		in, out := &in.RequestedAccessTokenVersion, &out.RequestedAccessTokenVersion
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIParameters.
func (in *APIParameters) DeepCopy() *APIParameters {
	if in == nil {
		return nil
	}
	out := new(APIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessTokenInitParameters) DeepCopyInto(out *AccessTokenInitParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessTokenInitParameters.
func (in *AccessTokenInitParameters) DeepCopy() *AccessTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessTokenObservation) DeepCopyInto(out *AccessTokenObservation) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessTokenObservation.
func (in *AccessTokenObservation) DeepCopy() *AccessTokenObservation {
	if in == nil {
		return nil
	}
	out := new(AccessTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessTokenParameters) DeepCopyInto(out *AccessTokenParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessTokenParameters.
func (in *AccessTokenParameters) DeepCopy() *AccessTokenParameters {
	if in == nil {
		return nil
	}
	out := new(AccessTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppRoleInitParameters) DeepCopyInto(out *AppRoleInitParameters) {
	*out = *in
	if in.AllowedMemberTypes != nil {
		in, out := &in.AllowedMemberTypes, &out.AllowedMemberTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppRoleInitParameters.
func (in *AppRoleInitParameters) DeepCopy() *AppRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppRoleObservation) DeepCopyInto(out *AppRoleObservation) {
	*out = *in
	if in.AllowedMemberTypes != nil {
		in, out := &in.AllowedMemberTypes, &out.AllowedMemberTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppRoleObservation.
func (in *AppRoleObservation) DeepCopy() *AppRoleObservation {
	if in == nil {
		return nil
	}
	out := new(AppRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppRoleParameters) DeepCopyInto(out *AppRoleParameters) {
	*out = *in
	if in.AllowedMemberTypes != nil {
		in, out := &in.AllowedMemberTypes, &out.AllowedMemberTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppRoleParameters.
func (in *AppRoleParameters) DeepCopy() *AppRoleParameters {
	if in == nil {
		return nil
	}
	out := new(AppRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Application) DeepCopyInto(out *Application) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Application.
func (in *Application) DeepCopy() *Application {
	if in == nil {
		return nil
	}
	out := new(Application)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Application) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInitParameters) DeepCopyInto(out *ApplicationInitParameters) {
	*out = *in
	if in.API != nil {
		in, out := &in.API, &out.API
		*out = new(APIInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AppRole != nil {
		in, out := &in.AppRole, &out.AppRole
		*out = make([]AppRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceOnlyAuthEnabled != nil {
		in, out := &in.DeviceOnlyAuthEnabled, &out.DeviceOnlyAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FallbackPublicClientEnabled != nil {
		in, out := &in.FallbackPublicClientEnabled, &out.FallbackPublicClientEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FeatureTags != nil {
		in, out := &in.FeatureTags, &out.FeatureTags
		*out = make([]FeatureTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupMembershipClaims != nil {
		in, out := &in.GroupMembershipClaims, &out.GroupMembershipClaims
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentifierUris != nil {
		in, out := &in.IdentifierUris, &out.IdentifierUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogoImage != nil {
		in, out := &in.LogoImage, &out.LogoImage
		*out = new(string)
		**out = **in
	}
	if in.MarketingURL != nil {
		in, out := &in.MarketingURL, &out.MarketingURL
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.Oauth2PostResponseRequired != nil {
		in, out := &in.Oauth2PostResponseRequired, &out.Oauth2PostResponseRequired
		*out = new(bool)
		**out = **in
	}
	if in.OptionalClaims != nil {
		in, out := &in.OptionalClaims, &out.OptionalClaims
		*out = new(OptionalClaimsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(PasswordInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PreventDuplicateNames != nil {
		in, out := &in.PreventDuplicateNames, &out.PreventDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.PrivacyStatementURL != nil {
		in, out := &in.PrivacyStatementURL, &out.PrivacyStatementURL
		*out = new(string)
		**out = **in
	}
	if in.PublicClient != nil {
		in, out := &in.PublicClient, &out.PublicClient
		*out = new(PublicClientInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RequiredResourceAccess != nil {
		in, out := &in.RequiredResourceAccess, &out.RequiredResourceAccess
		*out = make([]RequiredResourceAccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceManagementReference != nil {
		in, out := &in.ServiceManagementReference, &out.ServiceManagementReference
		*out = new(string)
		**out = **in
	}
	if in.SignInAudience != nil {
		in, out := &in.SignInAudience, &out.SignInAudience
		*out = new(string)
		**out = **in
	}
	if in.SinglePageApplication != nil {
		in, out := &in.SinglePageApplication, &out.SinglePageApplication
		*out = new(SinglePageApplicationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SupportURL != nil {
		in, out := &in.SupportURL, &out.SupportURL
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TemplateID != nil {
		in, out := &in.TemplateID, &out.TemplateID
		*out = new(string)
		**out = **in
	}
	if in.TermsOfServiceURL != nil {
		in, out := &in.TermsOfServiceURL, &out.TermsOfServiceURL
		*out = new(string)
		**out = **in
	}
	if in.Web != nil {
		in, out := &in.Web, &out.Web
		*out = new(WebInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInitParameters.
func (in *ApplicationInitParameters) DeepCopy() *ApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationList) DeepCopyInto(out *ApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Application, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationList.
func (in *ApplicationList) DeepCopy() *ApplicationList {
	if in == nil {
		return nil
	}
	out := new(ApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationObservation) DeepCopyInto(out *ApplicationObservation) {
	*out = *in
	if in.API != nil {
		in, out := &in.API, &out.API
		*out = new(APIObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AppRole != nil {
		in, out := &in.AppRole, &out.AppRole
		*out = make([]AppRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppRoleIds != nil {
		in, out := &in.AppRoleIds, &out.AppRoleIds
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceOnlyAuthEnabled != nil {
		in, out := &in.DeviceOnlyAuthEnabled, &out.DeviceOnlyAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DisabledByMicrosoft != nil {
		in, out := &in.DisabledByMicrosoft, &out.DisabledByMicrosoft
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FallbackPublicClientEnabled != nil {
		in, out := &in.FallbackPublicClientEnabled, &out.FallbackPublicClientEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FeatureTags != nil {
		in, out := &in.FeatureTags, &out.FeatureTags
		*out = make([]FeatureTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupMembershipClaims != nil {
		in, out := &in.GroupMembershipClaims, &out.GroupMembershipClaims
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdentifierUris != nil {
		in, out := &in.IdentifierUris, &out.IdentifierUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogoImage != nil {
		in, out := &in.LogoImage, &out.LogoImage
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.MarketingURL != nil {
		in, out := &in.MarketingURL, &out.MarketingURL
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.Oauth2PermissionScopeIds != nil {
		in, out := &in.Oauth2PermissionScopeIds, &out.Oauth2PermissionScopeIds
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Oauth2PostResponseRequired != nil {
		in, out := &in.Oauth2PostResponseRequired, &out.Oauth2PostResponseRequired
		*out = new(bool)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.OptionalClaims != nil {
		in, out := &in.OptionalClaims, &out.OptionalClaims
		*out = new(OptionalClaimsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(PasswordObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PreventDuplicateNames != nil {
		in, out := &in.PreventDuplicateNames, &out.PreventDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.PrivacyStatementURL != nil {
		in, out := &in.PrivacyStatementURL, &out.PrivacyStatementURL
		*out = new(string)
		**out = **in
	}
	if in.PublicClient != nil {
		in, out := &in.PublicClient, &out.PublicClient
		*out = new(PublicClientObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PublisherDomain != nil {
		in, out := &in.PublisherDomain, &out.PublisherDomain
		*out = new(string)
		**out = **in
	}
	if in.RequiredResourceAccess != nil {
		in, out := &in.RequiredResourceAccess, &out.RequiredResourceAccess
		*out = make([]RequiredResourceAccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceManagementReference != nil {
		in, out := &in.ServiceManagementReference, &out.ServiceManagementReference
		*out = new(string)
		**out = **in
	}
	if in.SignInAudience != nil {
		in, out := &in.SignInAudience, &out.SignInAudience
		*out = new(string)
		**out = **in
	}
	if in.SinglePageApplication != nil {
		in, out := &in.SinglePageApplication, &out.SinglePageApplication
		*out = new(SinglePageApplicationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SupportURL != nil {
		in, out := &in.SupportURL, &out.SupportURL
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TemplateID != nil {
		in, out := &in.TemplateID, &out.TemplateID
		*out = new(string)
		**out = **in
	}
	if in.TermsOfServiceURL != nil {
		in, out := &in.TermsOfServiceURL, &out.TermsOfServiceURL
		*out = new(string)
		**out = **in
	}
	if in.Web != nil {
		in, out := &in.Web, &out.Web
		*out = new(WebObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationObservation.
func (in *ApplicationObservation) DeepCopy() *ApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationParameters) DeepCopyInto(out *ApplicationParameters) {
	*out = *in
	if in.API != nil {
		in, out := &in.API, &out.API
		*out = new(APIParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AppRole != nil {
		in, out := &in.AppRole, &out.AppRole
		*out = make([]AppRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceOnlyAuthEnabled != nil {
		in, out := &in.DeviceOnlyAuthEnabled, &out.DeviceOnlyAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FallbackPublicClientEnabled != nil {
		in, out := &in.FallbackPublicClientEnabled, &out.FallbackPublicClientEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FeatureTags != nil {
		in, out := &in.FeatureTags, &out.FeatureTags
		*out = make([]FeatureTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupMembershipClaims != nil {
		in, out := &in.GroupMembershipClaims, &out.GroupMembershipClaims
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IdentifierUris != nil {
		in, out := &in.IdentifierUris, &out.IdentifierUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogoImage != nil {
		in, out := &in.LogoImage, &out.LogoImage
		*out = new(string)
		**out = **in
	}
	if in.MarketingURL != nil {
		in, out := &in.MarketingURL, &out.MarketingURL
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.Oauth2PostResponseRequired != nil {
		in, out := &in.Oauth2PostResponseRequired, &out.Oauth2PostResponseRequired
		*out = new(bool)
		**out = **in
	}
	if in.OptionalClaims != nil {
		in, out := &in.OptionalClaims, &out.OptionalClaims
		*out = new(OptionalClaimsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(PasswordParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PreventDuplicateNames != nil {
		in, out := &in.PreventDuplicateNames, &out.PreventDuplicateNames
		*out = new(bool)
		**out = **in
	}
	if in.PrivacyStatementURL != nil {
		in, out := &in.PrivacyStatementURL, &out.PrivacyStatementURL
		*out = new(string)
		**out = **in
	}
	if in.PublicClient != nil {
		in, out := &in.PublicClient, &out.PublicClient
		*out = new(PublicClientParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RequiredResourceAccess != nil {
		in, out := &in.RequiredResourceAccess, &out.RequiredResourceAccess
		*out = make([]RequiredResourceAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceManagementReference != nil {
		in, out := &in.ServiceManagementReference, &out.ServiceManagementReference
		*out = new(string)
		**out = **in
	}
	if in.SignInAudience != nil {
		in, out := &in.SignInAudience, &out.SignInAudience
		*out = new(string)
		**out = **in
	}
	if in.SinglePageApplication != nil {
		in, out := &in.SinglePageApplication, &out.SinglePageApplication
		*out = new(SinglePageApplicationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SupportURL != nil {
		in, out := &in.SupportURL, &out.SupportURL
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TemplateID != nil {
		in, out := &in.TemplateID, &out.TemplateID
		*out = new(string)
		**out = **in
	}
	if in.TermsOfServiceURL != nil {
		in, out := &in.TermsOfServiceURL, &out.TermsOfServiceURL
		*out = new(string)
		**out = **in
	}
	if in.Web != nil {
		in, out := &in.Web, &out.Web
		*out = new(WebParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationParameters.
func (in *ApplicationParameters) DeepCopy() *ApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSpec) DeepCopyInto(out *ApplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSpec.
func (in *ApplicationSpec) DeepCopy() *ApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStatus) DeepCopyInto(out *ApplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStatus.
func (in *ApplicationStatus) DeepCopy() *ApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureTagsInitParameters) DeepCopyInto(out *FeatureTagsInitParameters) {
	*out = *in
	if in.CustomSingleSignOn != nil {
		in, out := &in.CustomSingleSignOn, &out.CustomSingleSignOn
		*out = new(bool)
		**out = **in
	}
	if in.Enterprise != nil {
		in, out := &in.Enterprise, &out.Enterprise
		*out = new(bool)
		**out = **in
	}
	if in.Gallery != nil {
		in, out := &in.Gallery, &out.Gallery
		*out = new(bool)
		**out = **in
	}
	if in.Hide != nil {
		in, out := &in.Hide, &out.Hide
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureTagsInitParameters.
func (in *FeatureTagsInitParameters) DeepCopy() *FeatureTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeatureTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureTagsObservation) DeepCopyInto(out *FeatureTagsObservation) {
	*out = *in
	if in.CustomSingleSignOn != nil {
		in, out := &in.CustomSingleSignOn, &out.CustomSingleSignOn
		*out = new(bool)
		**out = **in
	}
	if in.Enterprise != nil {
		in, out := &in.Enterprise, &out.Enterprise
		*out = new(bool)
		**out = **in
	}
	if in.Gallery != nil {
		in, out := &in.Gallery, &out.Gallery
		*out = new(bool)
		**out = **in
	}
	if in.Hide != nil {
		in, out := &in.Hide, &out.Hide
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureTagsObservation.
func (in *FeatureTagsObservation) DeepCopy() *FeatureTagsObservation {
	if in == nil {
		return nil
	}
	out := new(FeatureTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureTagsParameters) DeepCopyInto(out *FeatureTagsParameters) {
	*out = *in
	if in.CustomSingleSignOn != nil {
		in, out := &in.CustomSingleSignOn, &out.CustomSingleSignOn
		*out = new(bool)
		**out = **in
	}
	if in.Enterprise != nil {
		in, out := &in.Enterprise, &out.Enterprise
		*out = new(bool)
		**out = **in
	}
	if in.Gallery != nil {
		in, out := &in.Gallery, &out.Gallery
		*out = new(bool)
		**out = **in
	}
	if in.Hide != nil {
		in, out := &in.Hide, &out.Hide
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureTagsParameters.
func (in *FeatureTagsParameters) DeepCopy() *FeatureTagsParameters {
	if in == nil {
		return nil
	}
	out := new(FeatureTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IDTokenInitParameters) DeepCopyInto(out *IDTokenInitParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IDTokenInitParameters.
func (in *IDTokenInitParameters) DeepCopy() *IDTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(IDTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IDTokenObservation) DeepCopyInto(out *IDTokenObservation) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IDTokenObservation.
func (in *IDTokenObservation) DeepCopy() *IDTokenObservation {
	if in == nil {
		return nil
	}
	out := new(IDTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IDTokenParameters) DeepCopyInto(out *IDTokenParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IDTokenParameters.
func (in *IDTokenParameters) DeepCopy() *IDTokenParameters {
	if in == nil {
		return nil
	}
	out := new(IDTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImplicitGrantInitParameters) DeepCopyInto(out *ImplicitGrantInitParameters) {
	*out = *in
	if in.AccessTokenIssuanceEnabled != nil {
		in, out := &in.AccessTokenIssuanceEnabled, &out.AccessTokenIssuanceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IDTokenIssuanceEnabled != nil {
		in, out := &in.IDTokenIssuanceEnabled, &out.IDTokenIssuanceEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImplicitGrantInitParameters.
func (in *ImplicitGrantInitParameters) DeepCopy() *ImplicitGrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImplicitGrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImplicitGrantObservation) DeepCopyInto(out *ImplicitGrantObservation) {
	*out = *in
	if in.AccessTokenIssuanceEnabled != nil {
		in, out := &in.AccessTokenIssuanceEnabled, &out.AccessTokenIssuanceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IDTokenIssuanceEnabled != nil {
		in, out := &in.IDTokenIssuanceEnabled, &out.IDTokenIssuanceEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImplicitGrantObservation.
func (in *ImplicitGrantObservation) DeepCopy() *ImplicitGrantObservation {
	if in == nil {
		return nil
	}
	out := new(ImplicitGrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImplicitGrantParameters) DeepCopyInto(out *ImplicitGrantParameters) {
	*out = *in
	if in.AccessTokenIssuanceEnabled != nil {
		in, out := &in.AccessTokenIssuanceEnabled, &out.AccessTokenIssuanceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IDTokenIssuanceEnabled != nil {
		in, out := &in.IDTokenIssuanceEnabled, &out.IDTokenIssuanceEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImplicitGrantParameters.
func (in *ImplicitGrantParameters) DeepCopy() *ImplicitGrantParameters {
	if in == nil {
		return nil
	}
	out := new(ImplicitGrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth2PermissionScopeInitParameters) DeepCopyInto(out *Oauth2PermissionScopeInitParameters) {
	*out = *in
	if in.AdminConsentDescription != nil {
		in, out := &in.AdminConsentDescription, &out.AdminConsentDescription
		*out = new(string)
		**out = **in
	}
	if in.AdminConsentDisplayName != nil {
		in, out := &in.AdminConsentDisplayName, &out.AdminConsentDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserConsentDescription != nil {
		in, out := &in.UserConsentDescription, &out.UserConsentDescription
		*out = new(string)
		**out = **in
	}
	if in.UserConsentDisplayName != nil {
		in, out := &in.UserConsentDisplayName, &out.UserConsentDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth2PermissionScopeInitParameters.
func (in *Oauth2PermissionScopeInitParameters) DeepCopy() *Oauth2PermissionScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(Oauth2PermissionScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth2PermissionScopeObservation) DeepCopyInto(out *Oauth2PermissionScopeObservation) {
	*out = *in
	if in.AdminConsentDescription != nil {
		in, out := &in.AdminConsentDescription, &out.AdminConsentDescription
		*out = new(string)
		**out = **in
	}
	if in.AdminConsentDisplayName != nil {
		in, out := &in.AdminConsentDisplayName, &out.AdminConsentDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserConsentDescription != nil {
		in, out := &in.UserConsentDescription, &out.UserConsentDescription
		*out = new(string)
		**out = **in
	}
	if in.UserConsentDisplayName != nil {
		in, out := &in.UserConsentDisplayName, &out.UserConsentDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth2PermissionScopeObservation.
func (in *Oauth2PermissionScopeObservation) DeepCopy() *Oauth2PermissionScopeObservation {
	if in == nil {
		return nil
	}
	out := new(Oauth2PermissionScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth2PermissionScopeParameters) DeepCopyInto(out *Oauth2PermissionScopeParameters) {
	*out = *in
	if in.AdminConsentDescription != nil {
		in, out := &in.AdminConsentDescription, &out.AdminConsentDescription
		*out = new(string)
		**out = **in
	}
	if in.AdminConsentDisplayName != nil {
		in, out := &in.AdminConsentDisplayName, &out.AdminConsentDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserConsentDescription != nil {
		in, out := &in.UserConsentDescription, &out.UserConsentDescription
		*out = new(string)
		**out = **in
	}
	if in.UserConsentDisplayName != nil {
		in, out := &in.UserConsentDisplayName, &out.UserConsentDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth2PermissionScopeParameters.
func (in *Oauth2PermissionScopeParameters) DeepCopy() *Oauth2PermissionScopeParameters {
	if in == nil {
		return nil
	}
	out := new(Oauth2PermissionScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionalClaimsInitParameters) DeepCopyInto(out *OptionalClaimsInitParameters) {
	*out = *in
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = make([]AccessTokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IDToken != nil {
		in, out := &in.IDToken, &out.IDToken
		*out = make([]IDTokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Saml2Token != nil {
		in, out := &in.Saml2Token, &out.Saml2Token
		*out = make([]Saml2TokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionalClaimsInitParameters.
func (in *OptionalClaimsInitParameters) DeepCopy() *OptionalClaimsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionalClaimsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionalClaimsObservation) DeepCopyInto(out *OptionalClaimsObservation) {
	*out = *in
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = make([]AccessTokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IDToken != nil {
		in, out := &in.IDToken, &out.IDToken
		*out = make([]IDTokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Saml2Token != nil {
		in, out := &in.Saml2Token, &out.Saml2Token
		*out = make([]Saml2TokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionalClaimsObservation.
func (in *OptionalClaimsObservation) DeepCopy() *OptionalClaimsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionalClaimsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionalClaimsParameters) DeepCopyInto(out *OptionalClaimsParameters) {
	*out = *in
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = make([]AccessTokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IDToken != nil {
		in, out := &in.IDToken, &out.IDToken
		*out = make([]IDTokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Saml2Token != nil {
		in, out := &in.Saml2Token, &out.Saml2Token
		*out = make([]Saml2TokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionalClaimsParameters.
func (in *OptionalClaimsParameters) DeepCopy() *OptionalClaimsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionalClaimsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordInitParameters) DeepCopyInto(out *PasswordInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordInitParameters.
func (in *PasswordInitParameters) DeepCopy() *PasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordObservation) DeepCopyInto(out *PasswordObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordObservation.
func (in *PasswordObservation) DeepCopy() *PasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordParameters) DeepCopyInto(out *PasswordParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordParameters.
func (in *PasswordParameters) DeepCopy() *PasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicClientInitParameters) DeepCopyInto(out *PublicClientInitParameters) {
	*out = *in
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicClientInitParameters.
func (in *PublicClientInitParameters) DeepCopy() *PublicClientInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicClientInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicClientObservation) DeepCopyInto(out *PublicClientObservation) {
	*out = *in
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicClientObservation.
func (in *PublicClientObservation) DeepCopy() *PublicClientObservation {
	if in == nil {
		return nil
	}
	out := new(PublicClientObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicClientParameters) DeepCopyInto(out *PublicClientParameters) {
	*out = *in
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicClientParameters.
func (in *PublicClientParameters) DeepCopy() *PublicClientParameters {
	if in == nil {
		return nil
	}
	out := new(PublicClientParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredResourceAccessInitParameters) DeepCopyInto(out *RequiredResourceAccessInitParameters) {
	*out = *in
	if in.ResourceAccess != nil {
		in, out := &in.ResourceAccess, &out.ResourceAccess
		*out = make([]ResourceAccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceAppID != nil {
		in, out := &in.ResourceAppID, &out.ResourceAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredResourceAccessInitParameters.
func (in *RequiredResourceAccessInitParameters) DeepCopy() *RequiredResourceAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredResourceAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredResourceAccessObservation) DeepCopyInto(out *RequiredResourceAccessObservation) {
	*out = *in
	if in.ResourceAccess != nil {
		in, out := &in.ResourceAccess, &out.ResourceAccess
		*out = make([]ResourceAccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceAppID != nil {
		in, out := &in.ResourceAppID, &out.ResourceAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredResourceAccessObservation.
func (in *RequiredResourceAccessObservation) DeepCopy() *RequiredResourceAccessObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredResourceAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredResourceAccessParameters) DeepCopyInto(out *RequiredResourceAccessParameters) {
	*out = *in
	if in.ResourceAccess != nil {
		in, out := &in.ResourceAccess, &out.ResourceAccess
		*out = make([]ResourceAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceAppID != nil {
		in, out := &in.ResourceAppID, &out.ResourceAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredResourceAccessParameters.
func (in *RequiredResourceAccessParameters) DeepCopy() *RequiredResourceAccessParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredResourceAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAccessInitParameters) DeepCopyInto(out *ResourceAccessInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAccessInitParameters.
func (in *ResourceAccessInitParameters) DeepCopy() *ResourceAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAccessObservation) DeepCopyInto(out *ResourceAccessObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAccessObservation.
func (in *ResourceAccessObservation) DeepCopy() *ResourceAccessObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAccessParameters) DeepCopyInto(out *ResourceAccessParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAccessParameters.
func (in *ResourceAccessParameters) DeepCopy() *ResourceAccessParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Saml2TokenInitParameters) DeepCopyInto(out *Saml2TokenInitParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Saml2TokenInitParameters.
func (in *Saml2TokenInitParameters) DeepCopy() *Saml2TokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(Saml2TokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Saml2TokenObservation) DeepCopyInto(out *Saml2TokenObservation) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Saml2TokenObservation.
func (in *Saml2TokenObservation) DeepCopy() *Saml2TokenObservation {
	if in == nil {
		return nil
	}
	out := new(Saml2TokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Saml2TokenParameters) DeepCopyInto(out *Saml2TokenParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Essential != nil {
		in, out := &in.Essential, &out.Essential
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Saml2TokenParameters.
func (in *Saml2TokenParameters) DeepCopy() *Saml2TokenParameters {
	if in == nil {
		return nil
	}
	out := new(Saml2TokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinglePageApplicationInitParameters) DeepCopyInto(out *SinglePageApplicationInitParameters) {
	*out = *in
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinglePageApplicationInitParameters.
func (in *SinglePageApplicationInitParameters) DeepCopy() *SinglePageApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SinglePageApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinglePageApplicationObservation) DeepCopyInto(out *SinglePageApplicationObservation) {
	*out = *in
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinglePageApplicationObservation.
func (in *SinglePageApplicationObservation) DeepCopy() *SinglePageApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(SinglePageApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinglePageApplicationParameters) DeepCopyInto(out *SinglePageApplicationParameters) {
	*out = *in
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinglePageApplicationParameters.
func (in *SinglePageApplicationParameters) DeepCopy() *SinglePageApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(SinglePageApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebInitParameters) DeepCopyInto(out *WebInitParameters) {
	*out = *in
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.ImplicitGrant != nil {
		in, out := &in.ImplicitGrant, &out.ImplicitGrant
		*out = new(ImplicitGrantInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LogoutURL != nil {
		in, out := &in.LogoutURL, &out.LogoutURL
		*out = new(string)
		**out = **in
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebInitParameters.
func (in *WebInitParameters) DeepCopy() *WebInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebObservation) DeepCopyInto(out *WebObservation) {
	*out = *in
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.ImplicitGrant != nil {
		in, out := &in.ImplicitGrant, &out.ImplicitGrant
		*out = new(ImplicitGrantObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.LogoutURL != nil {
		in, out := &in.LogoutURL, &out.LogoutURL
		*out = new(string)
		**out = **in
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebObservation.
func (in *WebObservation) DeepCopy() *WebObservation {
	if in == nil {
		return nil
	}
	out := new(WebObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebParameters) DeepCopyInto(out *WebParameters) {
	*out = *in
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.ImplicitGrant != nil {
		in, out := &in.ImplicitGrant, &out.ImplicitGrant
		*out = new(ImplicitGrantParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LogoutURL != nil {
		in, out := &in.LogoutURL, &out.LogoutURL
		*out = new(string)
		**out = **in
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebParameters.
func (in *WebParameters) DeepCopy() *WebParameters {
	if in == nil {
		return nil
	}
	out := new(WebParameters)
	in.DeepCopyInto(out)
	return out
}
