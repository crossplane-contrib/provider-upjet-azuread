//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupAssignmentSchedule) DeepCopyInto(out *AccessGroupAssignmentSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupAssignmentSchedule.
func (in *AccessGroupAssignmentSchedule) DeepCopy() *AccessGroupAssignmentSchedule {
	if in == nil {
		return nil
	}
	out := new(AccessGroupAssignmentSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessGroupAssignmentSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupAssignmentScheduleInitParameters) DeepCopyInto(out *AccessGroupAssignmentScheduleInitParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupAssignmentScheduleInitParameters.
func (in *AccessGroupAssignmentScheduleInitParameters) DeepCopy() *AccessGroupAssignmentScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessGroupAssignmentScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupAssignmentScheduleList) DeepCopyInto(out *AccessGroupAssignmentScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessGroupAssignmentSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupAssignmentScheduleList.
func (in *AccessGroupAssignmentScheduleList) DeepCopy() *AccessGroupAssignmentScheduleList {
	if in == nil {
		return nil
	}
	out := new(AccessGroupAssignmentScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessGroupAssignmentScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupAssignmentScheduleObservation) DeepCopyInto(out *AccessGroupAssignmentScheduleObservation) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupAssignmentScheduleObservation.
func (in *AccessGroupAssignmentScheduleObservation) DeepCopy() *AccessGroupAssignmentScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(AccessGroupAssignmentScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupAssignmentScheduleParameters) DeepCopyInto(out *AccessGroupAssignmentScheduleParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupAssignmentScheduleParameters.
func (in *AccessGroupAssignmentScheduleParameters) DeepCopy() *AccessGroupAssignmentScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(AccessGroupAssignmentScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupAssignmentScheduleSpec) DeepCopyInto(out *AccessGroupAssignmentScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupAssignmentScheduleSpec.
func (in *AccessGroupAssignmentScheduleSpec) DeepCopy() *AccessGroupAssignmentScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(AccessGroupAssignmentScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupAssignmentScheduleStatus) DeepCopyInto(out *AccessGroupAssignmentScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupAssignmentScheduleStatus.
func (in *AccessGroupAssignmentScheduleStatus) DeepCopy() *AccessGroupAssignmentScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(AccessGroupAssignmentScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupEligibilitySchedule) DeepCopyInto(out *AccessGroupEligibilitySchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupEligibilitySchedule.
func (in *AccessGroupEligibilitySchedule) DeepCopy() *AccessGroupEligibilitySchedule {
	if in == nil {
		return nil
	}
	out := new(AccessGroupEligibilitySchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessGroupEligibilitySchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupEligibilityScheduleInitParameters) DeepCopyInto(out *AccessGroupEligibilityScheduleInitParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupEligibilityScheduleInitParameters.
func (in *AccessGroupEligibilityScheduleInitParameters) DeepCopy() *AccessGroupEligibilityScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessGroupEligibilityScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupEligibilityScheduleList) DeepCopyInto(out *AccessGroupEligibilityScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessGroupEligibilitySchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupEligibilityScheduleList.
func (in *AccessGroupEligibilityScheduleList) DeepCopy() *AccessGroupEligibilityScheduleList {
	if in == nil {
		return nil
	}
	out := new(AccessGroupEligibilityScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessGroupEligibilityScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupEligibilityScheduleObservation) DeepCopyInto(out *AccessGroupEligibilityScheduleObservation) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupEligibilityScheduleObservation.
func (in *AccessGroupEligibilityScheduleObservation) DeepCopy() *AccessGroupEligibilityScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(AccessGroupEligibilityScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupEligibilityScheduleParameters) DeepCopyInto(out *AccessGroupEligibilityScheduleParameters) {
	*out = *in
	if in.AssignmentType != nil {
		in, out := &in.AssignmentType, &out.AssignmentType
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Justification != nil {
		in, out := &in.Justification, &out.Justification
		*out = new(string)
		**out = **in
	}
	if in.PermanentAssignment != nil {
		in, out := &in.PermanentAssignment, &out.PermanentAssignment
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalIDRef != nil {
		in, out := &in.PrincipalIDRef, &out.PrincipalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalIDSelector != nil {
		in, out := &in.PrincipalIDSelector, &out.PrincipalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.TicketNumber != nil {
		in, out := &in.TicketNumber, &out.TicketNumber
		*out = new(string)
		**out = **in
	}
	if in.TicketSystem != nil {
		in, out := &in.TicketSystem, &out.TicketSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupEligibilityScheduleParameters.
func (in *AccessGroupEligibilityScheduleParameters) DeepCopy() *AccessGroupEligibilityScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(AccessGroupEligibilityScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupEligibilityScheduleSpec) DeepCopyInto(out *AccessGroupEligibilityScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupEligibilityScheduleSpec.
func (in *AccessGroupEligibilityScheduleSpec) DeepCopy() *AccessGroupEligibilityScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(AccessGroupEligibilityScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessGroupEligibilityScheduleStatus) DeepCopyInto(out *AccessGroupEligibilityScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessGroupEligibilityScheduleStatus.
func (in *AccessGroupEligibilityScheduleStatus) DeepCopy() *AccessGroupEligibilityScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(AccessGroupEligibilityScheduleStatus)
	in.DeepCopyInto(out)
	return out
}
