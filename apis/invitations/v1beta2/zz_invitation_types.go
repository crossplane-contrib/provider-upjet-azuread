// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InvitationInitParameters struct {

	// A message block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.
	// Customize the message sent to the invited user
	Message *MessageInitParameters `json:"message,omitempty" tf:"message,omitempty"`

	// The URL that the user should be redirected to once the invitation is redeemed.
	// The URL that the user should be redirected to once the invitation is redeemed
	RedirectURL *string `json:"redirectUrl,omitempty" tf:"redirect_url,omitempty"`

	// The display name of the user being invited.
	// The display name of the user being invited
	UserDisplayName *string `json:"userDisplayName,omitempty" tf:"user_display_name,omitempty"`

	// The email address of the user being invited.
	// The email address of the user being invited
	UserEmailAddress *string `json:"userEmailAddress,omitempty" tf:"user_email_address,omitempty"`

	// The user type of the user being invited. Must be one of Guest or Member. Only Global Administrators can invite users as members. Defaults to Guest.
	// The user type of the user being invited
	UserType *string `json:"userType,omitempty" tf:"user_type,omitempty"`
}

type InvitationObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A message block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.
	// Customize the message sent to the invited user
	Message *MessageObservation `json:"message,omitempty" tf:"message,omitempty"`

	// The URL the user can use to redeem their invitation.
	// The URL the user can use to redeem their invitation
	RedeemURL *string `json:"redeemUrl,omitempty" tf:"redeem_url,omitempty"`

	// The URL that the user should be redirected to once the invitation is redeemed.
	// The URL that the user should be redirected to once the invitation is redeemed
	RedirectURL *string `json:"redirectUrl,omitempty" tf:"redirect_url,omitempty"`

	// The display name of the user being invited.
	// The display name of the user being invited
	UserDisplayName *string `json:"userDisplayName,omitempty" tf:"user_display_name,omitempty"`

	// The email address of the user being invited.
	// The email address of the user being invited
	UserEmailAddress *string `json:"userEmailAddress,omitempty" tf:"user_email_address,omitempty"`

	// Object ID of the invited user.
	// Object ID of the invited user
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// The user type of the user being invited. Must be one of Guest or Member. Only Global Administrators can invite users as members. Defaults to Guest.
	// The user type of the user being invited
	UserType *string `json:"userType,omitempty" tf:"user_type,omitempty"`
}

type InvitationParameters struct {

	// A message block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.
	// Customize the message sent to the invited user
	// +kubebuilder:validation:Optional
	Message *MessageParameters `json:"message,omitempty" tf:"message,omitempty"`

	// The URL that the user should be redirected to once the invitation is redeemed.
	// The URL that the user should be redirected to once the invitation is redeemed
	// +kubebuilder:validation:Optional
	RedirectURL *string `json:"redirectUrl,omitempty" tf:"redirect_url,omitempty"`

	// The display name of the user being invited.
	// The display name of the user being invited
	// +kubebuilder:validation:Optional
	UserDisplayName *string `json:"userDisplayName,omitempty" tf:"user_display_name,omitempty"`

	// The email address of the user being invited.
	// The email address of the user being invited
	// +kubebuilder:validation:Optional
	UserEmailAddress *string `json:"userEmailAddress,omitempty" tf:"user_email_address,omitempty"`

	// The user type of the user being invited. Must be one of Guest or Member. Only Global Administrators can invite users as members. Defaults to Guest.
	// The user type of the user being invited
	// +kubebuilder:validation:Optional
	UserType *string `json:"userType,omitempty" tf:"user_type,omitempty"`
}

type MessageInitParameters struct {

	// Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.
	// Email addresses of additional recipients the invitation message should be sent to
	AdditionalRecipients []*string `json:"additionalRecipients,omitempty" tf:"additional_recipients,omitempty"`

	// Customized message body you want to send if you don't want to send the default message. Cannot be specified with language.
	// Customized message body you want to send if you don't want to send the default message
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to en-US. Cannot be specified with body.
	// The language you want to send the default message in
	Language *string `json:"language,omitempty" tf:"language,omitempty"`
}

type MessageObservation struct {

	// Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.
	// Email addresses of additional recipients the invitation message should be sent to
	AdditionalRecipients []*string `json:"additionalRecipients,omitempty" tf:"additional_recipients,omitempty"`

	// Customized message body you want to send if you don't want to send the default message. Cannot be specified with language.
	// Customized message body you want to send if you don't want to send the default message
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to en-US. Cannot be specified with body.
	// The language you want to send the default message in
	Language *string `json:"language,omitempty" tf:"language,omitempty"`
}

type MessageParameters struct {

	// Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.
	// Email addresses of additional recipients the invitation message should be sent to
	// +kubebuilder:validation:Optional
	AdditionalRecipients []*string `json:"additionalRecipients,omitempty" tf:"additional_recipients,omitempty"`

	// Customized message body you want to send if you don't want to send the default message. Cannot be specified with language.
	// Customized message body you want to send if you don't want to send the default message
	// +kubebuilder:validation:Optional
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to en-US. Cannot be specified with body.
	// The language you want to send the default message in
	// +kubebuilder:validation:Optional
	Language *string `json:"language,omitempty" tf:"language,omitempty"`
}

// InvitationSpec defines the desired state of Invitation
type InvitationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InvitationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InvitationInitParameters `json:"initProvider,omitempty"`
}

// InvitationStatus defines the observed state of Invitation.
type InvitationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InvitationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Invitation is the Schema for the Invitations API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuread}
type Invitation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.redirectUrl) || (has(self.initProvider) && has(self.initProvider.redirectUrl))",message="spec.forProvider.redirectUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.userEmailAddress) || (has(self.initProvider) && has(self.initProvider.userEmailAddress))",message="spec.forProvider.userEmailAddress is a required parameter"
	Spec   InvitationSpec   `json:"spec"`
	Status InvitationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InvitationList contains a list of Invitations
type InvitationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Invitation `json:"items"`
}

// Repository type metadata.
var (
	Invitation_Kind             = "Invitation"
	Invitation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Invitation_Kind}.String()
	Invitation_KindAPIVersion   = Invitation_Kind + "." + CRDGroupVersion.String()
	Invitation_GroupVersionKind = CRDGroupVersion.WithKind(Invitation_Kind)
)

func init() {
	SchemeBuilder.Register(&Invitation{}, &InvitationList{})
}
