name: hashicorp/azuread
resources:
    azuread_access_package_assignment_policy:
        subCategory: Identity Governance
        name: azuread_access_package_assignment_policy
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "access_package_id": "${azuread_access_package.example.id}",
                  "approval_settings": [
                    {
                      "approval_required": true,
                      "approval_stage": [
                        {
                          "approval_timeout_in_days": 14,
                          "primary_approver": [
                            {
                              "object_id": "${azuread_group.example.object_id}",
                              "subject_type": "groupMembers"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "assignment_review_settings": [
                    {
                      "access_review_timeout_behavior": "keepAccess",
                      "duration_in_days": 3,
                      "enabled": true,
                      "review_frequency": "weekly",
                      "review_type": "Self"
                    }
                  ],
                  "description": "My assignment policy",
                  "display_name": "assignment-policy",
                  "duration_in_days": 90,
                  "question": [
                    {
                      "text": [
                        {
                          "default_text": "hello, how are you?"
                        }
                      ]
                    }
                  ],
                  "requestor_settings": [
                    {
                      "scope_type": "AllExistingDirectoryMemberUsers"
                    }
                  ]
                }
              references:
                access_package_id: azuread_access_package.example.id
                approval_settings.approval_stage.primary_approver.object_id: azuread_group.example.object_id
              dependencies:
                azuread_access_package.example: |-
                    {
                      "catalog_id": "${azuread_access_package_catalog.example.id}",
                      "description": "Access Package",
                      "display_name": "access-package"
                    }
                azuread_access_package_catalog.example: |-
                    {
                      "description": "Example catalog",
                      "display_name": "example-catalog"
                    }
                azuread_group.example: |-
                    {
                      "display_name": "group-name",
                      "security_enabled": true
                    }
        argumentDocs:
            access_package_id: (Required) The ID of the access package that will contain the policy.
            approval_settings: (Optional) An approval_settings block to specify whether approvals are required and how they are obtained, as documented below.
            approval_settings.approval_required: (Optional) Whether an approval is required.
            approval_settings.approval_required_for_extension: (Optional) Whether an approval is required to grant extension. Same approval settings used to approve initial access will apply.
            approval_settings.approval_stage: (Optional) An approval_stage block specifying the process to obtain an approval, as documented below.
            approval_settings.approval_stage.alternative_approval_enabled: (Optional) Whether alternative approvers are enabled.
            approval_settings.approval_stage.alternative_approver: (Optional) A block specifying alternative approvers when escalation is enabled and the primary approvers do not respond before the escalation time, as documented below.
            approval_settings.approval_stage.approval_timeout_in_days: (Required) Maximum number of days within which a request must be approved. If a request is not approved within this time period after it is made, it will be automatically rejected.
            approval_settings.approval_stage.approver_justification_required: (Optional) Whether an approver must provide a justification for their decision. Justification is visible to other approvers and the requestor.
            approval_settings.approval_stage.enable_alternative_approval_in_days: (Optional) Number of days before the request is forwarded to alternative approvers.
            approval_settings.approval_stage.primary_approver: (Optional) A block specifying the users who will be asked to approve requests, as documented below.
            approval_settings.approval_stage.primary_approver.backup: (Optional) For a user in an approval stage, this property indicates whether the user is a backup fallback approver.
            approval_settings.approval_stage.primary_approver.object_id: (Optional) The ID of the subject.
            approval_settings.approval_stage.primary_approver.subject_type: (Required) Specifies the type of users. Valid values are singleUser, groupMembers, connectedOrganizationMembers, requestorManager, internalSponsors, or externalSponsors.
            approval_settings.requestor_justification_required: (Optional) Whether a requestor is required to provide a justification to request an access package. Justification is visible to approvers and the requestor.
            assignment_review_settings: (Optional) An assignment_review_settings block, to specify whether assignment review is needed and how it is conducted, as documented below.
            assignment_review_settings.access_recommendation_enabled: (Optional) Whether to show the reviewer decision helpers. If enabled, system recommendations based on users' access information will be shown to the reviewers. The reviewer will be recommended to approve the review if the user has signed-in at least once during the last 30 days. The reviewer will be recommended to deny the review if the user has not signed-in during the last 30 days.
            assignment_review_settings.access_review_timeout_behavior: (Optional) Specifies the actions the system takes if reviewers don't respond in time. Valid values are keepAccess, removeAccess, or acceptAccessRecommendation.
            assignment_review_settings.approver_justification_required: (Optional) Whether a reviewer needs to provide a justification for their decision. Justification is visible to other reviewers and the requestor.
            assignment_review_settings.duration_in_days: (Number) How many days each occurrence of the access review series will run.
            assignment_review_settings.enabled: (Optional) Whether to enable assignment review.
            assignment_review_settings.review_frequency: (Optional) This will determine how often the access review campaign runs, valid values are weekly, monthly, quarterly, halfyearly, or annual.
            assignment_review_settings.review_type: (Optional) Self-review or specific reviewers. Valid values are Manager, Reviewers, or Self.
            assignment_review_settings.reviewer: (Optional) One or more reviewer blocks to specify the users who will be reviewers (when review_type is Reviewers), as documented below.
            assignment_review_settings.reviewer.backup: (Optional) For a user in an approval stage, this property indicates whether the user is a backup approver.
            assignment_review_settings.reviewer.object_id: (Optional) The ID of the subject.
            assignment_review_settings.reviewer.subject_type: (Required) Specifies the type of users. Valid values are singleUser, groupMembers, connectedOrganizationMembers, requestorManager, internalSponsors, or externalSponsors.
            assignment_review_settings.starting_on: (Optional) This is the date the access review campaign will start on, formatted as an RFC3339 date string in UTC(e.g. 2018-01-01T01:02:03Z), default is now. Once an access review has been created, you cannot update its start date
            description: (Required) The description of the policy.
            display_name: (Required) The display name of the policy.
            duration_in_days: (Optional) How many days this assignment is valid for.
            expiration_date: (Optional) The date that this assignment expires, formatted as an RFC3339 date string in UTC(e.g. 2018-01-01T01:02:03Z).
            extension_enabled: (Optional) Whether users will be able to request extension of their access to this package before their access expires.
            id: (String) The ID of this resource.
            question: (Optional) One or more question blocks for the requestor, as documented below.
            question.choice: (Optional) One or more blocks configuring a choice to the question, as documented below.
            question.choice.actual_value: (Required) The actual value of this choice.
            question.choice.display_value: (Required) A block describing the display text of this choice, as documented below.
            question.choice.display_value.default_text: (Required) The default text of this question choice.
            question.choice.display_value.localized_text: (Optional) One or more blocks describing localized text of this question choice, as documented below.
            question.choice.display_value.localized_text.content: (Required) The localized content of this question choice.
            question.choice.display_value.localized_text.language_code: (Required) The ISO 639 language code for this question choice content.
            question.required: (Optional) Whether this question is required.
            question.sequence: (Optional) The sequence number of this question.
            question.text: (Required) A block describing the content of this question, as documented below.
            question.text.default_text: (Required) The default text of this question.
            question.text.localized_text: (Optional) One or more blocks describing localized text of this question, as documented below.
            question.text.localized_text.content: (Required) The localized content of this question.
            question.text.localized_text.language_code: (Required) The ISO 639 language code for this question content.
            requestor_settings: (Optional) A requestor_settings block to configure the users who can request access, as documented below.
            requestor_settings.requestor: (Optional) A block specifying the users who are allowed to request on this policy, as documented below.
            requestor_settings.requestor.object_id: (Optional) The ID of the subject.
            requestor_settings.requestor.subject_type: (Required) Specifies the type of users. Valid values are singleUser, groupMembers, connectedOrganizationMembers, requestorManager, internalSponsors, or externalSponsors.
            requestor_settings.requests_accepted: (Optional) Whether to accept requests using this policy. When false, no new requests can be made using this policy.
            requestor_settings.scope_type: (Optional) Specifies the scopes of the requestors. Valid values are AllConfiguredConnectedOrganizationSubjects, AllExistingConnectedOrganizationSubjects, AllExistingDirectoryMemberUsers, AllExistingDirectorySubjects, AllExternalSubjects, NoSubjects, SpecificConnectedOrganizationSubjects, or SpecificDirectorySubjects.
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_access_package_assignment_policy.example 00000000-0000-0000-0000-000000000000
    azuread_access_package_catalog:
        subCategory: Identity Governance
        name: azuread_access_package_catalog
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Example access package catalog",
                  "display_name": "example-access-package-catalog"
                }
        argumentDocs:
            description: '- (Required) The description of the access package catalog.'
            display_name: '- (Required) The display name of the access package catalog.'
            externally_visible: '- (Optional) Whether the access packages in this catalog can be requested by users outside the tenant.'
            id: '- The ID of this resource.'
            published: '- (Optional) Whether the access packages in this catalog are available for management.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements: []
    azuread_access_package_catalog_role_assignment:
        subCategory: Identity Governance
        name: azuread_access_package_catalog_role_assignment
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "catalog_id": "${azuread_access_package_catalog.example.id}",
                  "principal_object_id": "${data.azuread_user.example.object_id}",
                  "role_id": "${data.azuread_access_package_catalog_role.example.object_id}"
                }
              references:
                catalog_id: azuread_access_package_catalog.example.id
                principal_object_id: data.azuread_user.example.object_id
                role_id: data.azuread_access_package_catalog_role.example.object_id
              dependencies:
                azuread_access_package_catalog.example: |-
                    {
                      "description": "Example access package catalog",
                      "display_name": "example-access-package-catalog"
                    }
        argumentDocs:
            catalog_id: '- (Required) The ID of the Catalog this role assignment will be scoped to. Changing this forces a new resource to be created.'
            principal_object_id: '- (Required) The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.'
            role_id: '- (Required) The object ID of the catalog role you want to assign. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_access_package_catalog_role_assignment.example 00000000-0000-0000-0000-000000000000
    azuread_access_package_resource_catalog_association:
        subCategory: Identity Governance
        name: azuread_access_package_resource_catalog_association
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "catalog_id": "${azuread_access_package_catalog.example_catalog.id}",
                  "resource_origin_id": "${azuread_group.example_group.object_id}",
                  "resource_origin_system": "AadGroup"
                }
              references:
                catalog_id: azuread_access_package_catalog.example_catalog.id
                resource_origin_id: azuread_group.example_group.object_id
              dependencies:
                azuread_access_package_catalog.example: |-
                    {
                      "description": "Example catalog",
                      "display_name": "example-catalog"
                    }
                azuread_group.example: |-
                    {
                      "display_name": "example-group",
                      "security_enabled": true
                    }
        argumentDocs:
            catalog_id: '- (Required) The unique ID of the access package catalog. Changing this forces a new resource to be created.'
            id: '- The ID of this resource, the ID is the concatenation of catalog_id and resource_origin_id with colon in between.'
            resource_origin_id: '- (Required) The unique identifier of the resource in the origin system. In the case of an Azure AD group, this is the identifier of the group. Changing this forces a new resource to be created.'
            resource_origin_system: '- (Required) The type of the resource in the origin system, such as SharePointOnline, AadApplication or AadGroup. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements: []
    azuread_access_package_resource_package_association:
        subCategory: Identity Governance
        name: azuread_access_package_resource_package_association
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "access_package_id": "${azuread_access_package.example.id}",
                  "catalog_resource_association_id": "${azuread_access_package_resource_catalog_association.example.id}"
                }
              references:
                access_package_id: azuread_access_package.example.id
                catalog_resource_association_id: azuread_access_package_resource_catalog_association.example.id
              dependencies:
                azuread_access_package.example: |-
                    {
                      "catalog_id": "${azuread_access_package_catalog.example_catalog.id}",
                      "description": "Example Package",
                      "display_name": "example-package"
                    }
                azuread_access_package_catalog.example: |-
                    {
                      "description": "Example catalog",
                      "display_name": "example-catalog"
                    }
                azuread_access_package_resource_catalog_association.example: |-
                    {
                      "catalog_id": "${azuread_access_package_catalog.example_catalog.id}",
                      "resource_origin_id": "${azuread_group.example_group.object_id}",
                      "resource_origin_system": "AadGroup"
                    }
                azuread_group.example: |-
                    {
                      "display_name": "example-group",
                      "security_enabled": true
                    }
        argumentDocs:
            access_package_id: '- (Required) The ID of access package this resource association is configured to. Changing this forces a new resource to be created.'
            access_type: '- (Optional) The role of access type to the specified resource. Valid values are Member, or Owner The default is Member. Changing this forces a new resource to be created.'
            catalog_resource_association_id: '- (Required) The ID of the catalog association from the azuread_access_package_resource_catalog_association resource. Changing this forces a new resource to be created.'
            id: '- The ID of this resource. The ID is combined by four fields with colon in between, the four fields are access_package_id, this package association id, resource_origin_id and access_type.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements: []
    azuread_administrative_unit:
        subCategory: Administrative Units
        name: azuread_administrative_unit
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Just an example",
                  "display_name": "Example-AU",
                  "hidden_membership_enabled": false
                }
        argumentDocs:
            description: '- (Optional) The description of the administrative unit.'
            display_name: '- (Required) The display name of the administrative unit.'
            hidden_membership_enabled: '- (Optional) Whether the administrative unit and its members are hidden or publicly viewable in the directory.'
            members: '- (Optional) A set of object IDs of members who should be present in this administrative unit. Supported object types are Users or Groups.'
            object_id: '- The object ID of the administrative unit.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_administrative_unit.example 00000000-0000-0000-0000-000000000000
    azuread_administrative_unit_member:
        subCategory: Administrative Units
        name: azuread_administrative_unit_member
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "administrative_unit_object_id": "${azuread_administrative_unit.example.id}",
                  "member_object_id": "${data.azuread_user.example.id}"
                }
              references:
                administrative_unit_object_id: azuread_administrative_unit.example.id
                member_object_id: data.azuread_user.example.id
              dependencies:
                azuread_administrative_unit.example: |-
                    {
                      "display_name": "Example-AU"
                    }
        argumentDocs:
            administrative_unit_object_id: '- (Required) The object ID of the administrative unit you want to add the member to. Changing this forces a new resource to be created.'
            member_object_id: '- (Required) The object ID of the user or group you want to add as a member of the administrative unit. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_administrative_unit_member.example 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111
    azuread_administrative_unit_role_member:
        subCategory: Administrative Units
        name: azuread_administrative_unit_role_member
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "administrative_unit_object_id": "${azuread_administrative_unit.example.id}",
                  "member_object_id": "${data.azuread_user.example.id}",
                  "role_object_id": "${azuread_directory_role.example.object_id}"
                }
              references:
                administrative_unit_object_id: azuread_administrative_unit.example.id
                member_object_id: data.azuread_user.example.id
                role_object_id: azuread_directory_role.example.object_id
              dependencies:
                azuread_administrative_unit.example: |-
                    {
                      "display_name": "Example-AU"
                    }
                azuread_directory_role.example: |-
                    {
                      "display_name": "Security administrator"
                    }
        argumentDocs:
            administrative_unit_object_id: '- (Required) The object ID of the administrative unit you want to add the member to. Changing this forces a new resource to be created.'
            member_object_id: '- (Required) The object ID of the user, group or service principal you want to add as a member of the administrative unit. Changing this forces a new resource to be created.'
            role_object_id: '- (Required) The object ID of the directory role you want to assign. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_administrative_unit_role_member.example 00000000-0000-0000-0000-000000000000/roleMember/zX37MRLyF0uvE-xf2WH4B7x-6CPLfudNnxFGj800htpBXqkxW7bITqGb6Rj4kuTuS
    azuread_app_role_assignment:
        subCategory: App Role Assignments
        name: azuread_app_role_assignment
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "app_role_id": "${azuread_service_principal.msgraph.app_role_ids[\"User.Read.All\"]}",
                  "principal_object_id": "${azuread_service_principal.example.object_id}",
                  "resource_object_id": "${azuread_service_principal.msgraph.object_id}"
                }
              references:
                app_role_id: azuread_service_principal.msgraph.app_role_ids["User.Read.All"]
                principal_object_id: azuread_service_principal.example.object_id
                resource_object_id: azuread_service_principal.msgraph.object_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.msgraph.app_role_ids[\"User.Read.All\"]}",
                              "type": "Role"
                            },
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.ReadWrite\"]}",
                              "type": "Scope"
                            }
                          ],
                          "resource_app_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}"
                        }
                      ]
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}"
                    }
                azuread_service_principal.msgraph: |-
                    {
                      "client_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}",
                      "use_existing": true
                    }
            - name: example
              manifest: |-
                {
                  "app_role_id": "${azuread_service_principal.internal.app_role_ids[\"Query.All\"]}",
                  "principal_object_id": "${azuread_service_principal.example.object_id}",
                  "resource_object_id": "${azuread_service_principal.internal.object_id}"
                }
              references:
                app_role_id: azuread_service_principal.internal.app_role_ids["Query.All"]
                principal_object_id: azuread_service_principal.example.object_id
                resource_object_id: azuread_service_principal.internal.object_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.internal.app_role_ids[\"Query.All\"]}",
                              "type": "Role"
                            }
                          ],
                          "resource_app_id": "${azuread_application.internal.application_id}"
                        }
                      ]
                    }
                azuread_application.internal: |-
                    {
                      "app_role": [
                        {
                          "allowed_member_types": [
                            "Application"
                          ],
                          "description": "Apps can query the database",
                          "display_name": "Query",
                          "enabled": true,
                          "id": "00000000-0000-0000-0000-111111111111",
                          "value": "Query.All"
                        }
                      ],
                      "display_name": "internal"
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}"
                    }
                azuread_service_principal.internal: |-
                    {
                      "client_id": "${azuread_application.internal.application_id}"
                    }
            - name: example
              manifest: |-
                {
                  "app_role_id": "${azuread_service_principal.internal.app_role_ids[\"Admin.All\"]}",
                  "principal_object_id": "${azuread_group.example.object_id}",
                  "resource_object_id": "${azuread_service_principal.internal.object_id}"
                }
              references:
                app_role_id: azuread_service_principal.internal.app_role_ids["Admin.All"]
                principal_object_id: azuread_group.example.object_id
                resource_object_id: azuread_service_principal.internal.object_id
              dependencies:
                azuread_application.internal: |-
                    {
                      "app_role": [
                        {
                          "allowed_member_types": [
                            "Application",
                            "User"
                          ],
                          "description": "Admins can perform all task actions",
                          "display_name": "Admin",
                          "enabled": true,
                          "id": "00000000-0000-0000-0000-222222222222",
                          "value": "Admin.All"
                        }
                      ],
                      "display_name": "internal"
                    }
                azuread_group.example: |-
                    {
                      "display_name": "example",
                      "security_enabled": true
                    }
                azuread_service_principal.internal: |-
                    {
                      "client_id": "${azuread_application.internal.application_id}"
                    }
                azuread_user.example: |-
                    {
                      "display_name": "D. Duck",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "d.duck@${data.azuread_domains.example.domains.0.domain_name}"
                    }
            - name: example
              manifest: |-
                {
                  "app_role_id": "${azuread_service_principal.internal.app_role_ids[\"Admin.All\"]}",
                  "principal_object_id": "${azuread_user.example.object_id}",
                  "resource_object_id": "${azuread_service_principal.internal.object_id}"
                }
              references:
                app_role_id: azuread_service_principal.internal.app_role_ids["Admin.All"]
                principal_object_id: azuread_user.example.object_id
                resource_object_id: azuread_service_principal.internal.object_id
              dependencies:
                azuread_application.internal: |-
                    {
                      "app_role": [
                        {
                          "allowed_member_types": [
                            "Application",
                            "User"
                          ],
                          "description": "Admins can perform all task actions",
                          "display_name": "Admin",
                          "enabled": true,
                          "id": "00000000-0000-0000-0000-222222222222",
                          "value": "Admin.All"
                        }
                      ],
                      "display_name": "internal"
                    }
                azuread_group.example: |-
                    {
                      "display_name": "example",
                      "security_enabled": true
                    }
                azuread_service_principal.internal: |-
                    {
                      "client_id": "${azuread_application.internal.application_id}"
                    }
                azuread_user.example: |-
                    {
                      "display_name": "D. Duck",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "d.duck@${data.azuread_domains.example.domains.0.domain_name}"
                    }
            - name: example
              manifest: |-
                {
                  "app_role_id": "00000000-0000-0000-0000-000000000000",
                  "principal_object_id": "${azuread_group.example.object_id}",
                  "resource_object_id": "${azuread_service_principal.internal.object_id}"
                }
              references:
                principal_object_id: azuread_group.example.object_id
                resource_object_id: azuread_service_principal.internal.object_id
              dependencies:
                azuread_application.internal: |-
                    {
                      "display_name": "internal"
                    }
                azuread_group.example: |-
                    {
                      "display_name": "example",
                      "security_enabled": true
                    }
                azuread_service_principal.internal: |-
                    {
                      "client_id": "${azuread_application.internal.application_id}"
                    }
        argumentDocs:
            app_role_id: '- (Required) The ID of the app role to be assigned, or the default role ID 00000000-0000-0000-0000-000000000000. Changing this forces a new resource to be created.'
            principal_display_name: '- The display name of the principal to which the app role is assigned.'
            principal_object_id: '- (Required) The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.'
            principal_type: '- The object type of the principal to which the app role is assigned.'
            resource_display_name: '- The display name of the application representing the resource.'
            resource_object_id: '- (Required) The object ID of the service principal representing the resource. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_app_role_assignment.example 00000000-0000-0000-0000-000000000000/appRoleAssignment/aaBBcDDeFG6h5JKLMN2PQrrssTTUUvWWxxxxxyyyzzz
    azuread_application:
        subCategory: Applications
        name: azuread_application
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "api": [
                    {
                      "known_client_applications": [
                        "${azuread_application.known1.application_id}",
                        "${azuread_application.known2.application_id}"
                      ],
                      "mapped_claims_enabled": true,
                      "oauth2_permission_scope": [
                        {
                          "admin_consent_description": "Allow the application to access example on behalf of the signed-in user.",
                          "admin_consent_display_name": "Access example",
                          "enabled": true,
                          "id": "96183846-204b-4b43-82e1-5d2222eb4b9b",
                          "type": "User",
                          "user_consent_description": "Allow the application to access example on your behalf.",
                          "user_consent_display_name": "Access example",
                          "value": "user_impersonation"
                        },
                        {
                          "admin_consent_description": "Administer the example application",
                          "admin_consent_display_name": "Administer",
                          "enabled": true,
                          "id": "be98fa3e-ab5b-4b11-83d9-04ba2b7946bc",
                          "type": "Admin",
                          "value": "administer"
                        }
                      ],
                      "requested_access_token_version": 2
                    }
                  ],
                  "app_role": [
                    {
                      "allowed_member_types": [
                        "User",
                        "Application"
                      ],
                      "description": "Admins can manage roles and perform all task actions",
                      "display_name": "Admin",
                      "enabled": true,
                      "id": "1b19509b-32b1-4e9f-b71d-4992aa991967",
                      "value": "admin"
                    },
                    {
                      "allowed_member_types": [
                        "User"
                      ],
                      "description": "ReadOnly roles have limited query access",
                      "display_name": "ReadOnly",
                      "enabled": true,
                      "id": "497406e4-012a-4267-bf18-45a1cb148a01",
                      "value": "User"
                    }
                  ],
                  "display_name": "example",
                  "feature_tags": [
                    {
                      "enterprise": true,
                      "gallery": true
                    }
                  ],
                  "identifier_uris": [
                    "api://example-app"
                  ],
                  "logo_image": "${filebase64(\"/path/to/logo.png\")}",
                  "optional_claims": [
                    {
                      "access_token": [
                        {
                          "name": "myclaim"
                        },
                        {
                          "name": "otherclaim"
                        }
                      ],
                      "id_token": [
                        {
                          "additional_properties": [
                            "emit_as_roles"
                          ],
                          "essential": true,
                          "name": "userclaim",
                          "source": "user"
                        }
                      ],
                      "saml2_token": [
                        {
                          "name": "samlexample"
                        }
                      ]
                    }
                  ],
                  "owners": [
                    "${data.azuread_client_config.current.object_id}"
                  ],
                  "required_resource_access": [
                    {
                      "resource_access": [
                        {
                          "id": "df021288-bdef-4463-88db-98f22de89214",
                          "type": "Role"
                        },
                        {
                          "id": "b4e74841-8e56-480b-be8b-910348b18b4c",
                          "type": "Scope"
                        }
                      ],
                      "resource_app_id": "00000003-0000-0000-c000-000000000000"
                    },
                    {
                      "resource_access": [
                        {
                          "id": "594c1fb6-4f81-4475-ae41-0c394909246c",
                          "type": "Role"
                        }
                      ],
                      "resource_app_id": "c5393580-f805-4401-95e8-94b7a6ef2fc2"
                    }
                  ],
                  "sign_in_audience": "AzureADMultipleOrgs",
                  "web": [
                    {
                      "homepage_url": "https://app.example.net",
                      "implicit_grant": [
                        {
                          "access_token_issuance_enabled": true,
                          "id_token_issuance_enabled": true
                        }
                      ],
                      "logout_url": "https://app.example.net/logout",
                      "redirect_uris": [
                        "https://app.example.net/account"
                      ]
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "display_name": "example",
                  "owners": [
                    "${data.azuread_client_config.current.object_id}"
                  ],
                  "password": [
                    {
                      "display_name": "MySecret-1",
                      "end_date": "${timeadd(time_rotating.example.id, \"4320h\")}",
                      "start_date": "${time_rotating.example.id}"
                    }
                  ]
                }
              references:
                password.start_date: time_rotating.example.id
              dependencies:
                time_rotating.example: |-
                    {
                      "rotation_days": 180
                    }
            - name: example
              manifest: |-
                {
                  "display_name": "example",
                  "template_id": "${data.azuread_application_template.example.template_id}"
                }
              references:
                template_id: data.azuread_application_template.example.template_id
              dependencies:
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.client_id}",
                      "use_existing": true
                    }
        argumentDocs:
            api: '- (Optional) An api block as documented below, which configures API related settings for this application.'
            api.known_client_applications: '- (Optional) A set of application IDs (client IDs), used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app.'
            api.mapped_claims_enabled: '- (Optional) Allows an application to use claims mapping without specifying a custom signing key. Defaults to false.'
            api.oauth2_permission_scope: '- (Optional) One or more oauth2_permission_scope blocks as documented below, to describe delegated permissions exposed by the web API represented by this application.'
            api.oauth2_permission_scope.admin_consent_description: '- (Required) Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.'
            api.oauth2_permission_scope.admin_consent_display_name: '- (Required) Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.'
            api.oauth2_permission_scope.enabled: '- (Optional) Determines if the permission scope is enabled. Defaults to true.'
            api.oauth2_permission_scope.id: '- (Required) The unique identifier of the delegated permission. Must be a valid UUID.'
            api.oauth2_permission_scope.type: '- (Optional) Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. Defaults to User. Possible values are User or Admin.'
            api.oauth2_permission_scope.user_consent_description: '- (Optional) Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.'
            api.oauth2_permission_scope.user_consent_display_name: '- (Optional) Display name for the delegated permission that appears in the end user consent experience.'
            api.oauth2_permission_scope.value: '- (Optional) The value that is used for the scp claim in OAuth 2.0 access tokens.'
            api.requested_access_token_version: '- (Optional) The access token version expected by this resource. Must be one of 1 or 2, and must be 2 when sign_in_audience is either AzureADandPersonalMicrosoftAccount or PersonalMicrosoftAccount Defaults to 1.'
            app_role: '- (Optional) A collection of app_role blocks as documented below. For more information see official documentation on Application Roles.'
            app_role.allowed_member_types: '- (Required) Specifies whether this app role definition can be assigned to users and groups by setting to User, or to other applications (that are accessing this application in a standalone scenario) by setting to Application, or to both.'
            app_role.description: '- (Required) Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.'
            app_role.display_name: '- (Required) Display name for the app role that appears during app role assignment and in consent experiences.'
            app_role.enabled: '- (Optional) Determines if the app role is enabled. Defaults to true.'
            app_role.id: '- (Required) The unique identifier of the app role. Must be a valid UUID.'
            app_role.value: '- (Optional) The value that is used for the roles claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.'
            app_role_ids: '- A mapping of app role values to app role IDs, intended to be useful when referencing app roles in other resources in your configuration.'
            client_id: '- The Client ID for the application.'
            description: '- (Optional) A description of the application, as shown to end users.'
            device_only_auth_enabled: '- (Optional) Specifies whether this application supports device authentication without a user. Defaults to false.'
            disabled_by_microsoft: '- Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. DisabledDueToViolationOfServicesAgreement'
            display_name: '- (Required) The display name for the application.'
            fallback_public_client_enabled: '- (Optional) Specifies whether the application is a public client. Appropriate for apps using token grant flows that don''t use a redirect URI. Defaults to false.'
            feature_tags: '- (Optional) A feature_tags block as described below. Cannot be used together with the tags property.'
            feature_tags.custom_single_sign_on: '- (Optional) Whether this application represents a custom SAML application for linked service principals. Enabling this will assign the WindowsAzureActiveDirectoryCustomSingleSignOnApplication tag. Defaults to false.'
            feature_tags.enterprise: '- (Optional) Whether this application represents an Enterprise Application for linked service principals. Enabling this will assign the WindowsAzureActiveDirectoryIntegratedApp tag. Defaults to false.'
            feature_tags.gallery: '- (Optional) Whether this application represents a gallery application for linked service principals. Enabling this will assign the WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1 tag. Defaults to false.'
            feature_tags.hide: '- (Optional) Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the HideApp tag. Defaults to false.'
            group_membership_claims: '- (Optional) A set of strings containing membership claims issued in a user or OAuth 2.0 access token that the app expects. Possible values are None, SecurityGroup, DirectoryRole, ApplicationGroup or All.'
            id: '- The Terraform resource ID for the application, for use when referencing this resource in your Terraform configuration.'
            identifier_uris: '- (Optional) A set of user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant.'
            logo_image: '- (Optional) A logo image to upload for the application, as a raw base64-encoded string. The image should be in gif, jpeg or png format. Note that once an image has been uploaded, it is not possible to remove it without replacing it with another image.'
            logo_url: '- CDN URL to the application''s logo, as uploaded with the logo_image property.'
            marketing_url: '- (Optional) URL of the application''s marketing page.'
            notes: '- (Optional) User-specified notes relevant for the management of the application.'
            oauth2_permission_scope_ids: '- A mapping of OAuth2.0 permission scope values to scope IDs, intended to be useful when referencing permission scopes in other resources in your configuration.'
            oauth2_post_response_required: '- (Optional) Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. Defaults to false, which specifies that only GET requests are allowed.'
            object_id: '- The application''s object ID.'
            optional_claims: '- (Optional) An optional_claims block as documented below.'
            optional_claims.access_token: '- (Optional) One or more access_token blocks as documented below.'
            optional_claims.access_token.additional_properties: '- List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim. Possible values are: cloud_displayname, dns_domain_and_sam_account_name, emit_as_roles, include_externally_authenticated_upn_without_hash, include_externally_authenticated_upn, max_size_limit, netbios_domain_and_sam_account_name, on_premise_security_identifier, sam_account_name, and use_guid.'
            optional_claims.access_token.essential: '- Whether the claim specified by the client is necessary to ensure a smooth authorization experience.'
            optional_claims.access_token.name: '- The name of the optional claim.'
            optional_claims.access_token.source: '- The source of the claim. If source is absent, the claim is a predefined optional claim. If source is user, the value of name is the extension property from the user object.'
            optional_claims.id_token: '- (Optional) One or more id_token blocks as documented below.'
            optional_claims.saml2_token: '- (Optional) One or more saml2_token blocks as documented below.'
            owners: '- (Optional) A set of object IDs of principals that will be granted ownership of the application. Supported object types are users or service principals. By default, no owners are assigned.'
            password: '- (Optional) A single password block as documented below. The password is generated during creation. By default, no password is generated.'
            password.display_name: '- (Required) A display name for the password. Changing this field forces a new resource to be created.'
            password.end_date: '- (Optional) The end date until which the password is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). Changing this field forces a new resource to be created.'
            password.key_id: '- (Required) The unique key ID for the generated password.'
            password.prevent_duplicate_names: '- (Optional) If true, will return an error if an existing application is found with the same name. Defaults to false.'
            password.privacy_statement_url: '- (Optional) URL of the application''s privacy statement.'
            password.public_client: '- (Optional) A public_client block as documented below, which configures non-web app or non-web API application settings, for example mobile or other public clients such as an installed application running on a desktop device.'
            password.required_resource_access: '- (Optional) A collection of required_resource_access blocks as documented below.'
            password.service_management_reference: '- (Optional) References application context information from a Service or Asset Management database.'
            password.sign_in_audience: '- (Optional) The Microsoft account types that are supported for the current application. Must be one of AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount or PersonalMicrosoftAccount. Defaults to AzureADMyOrg.'
            password.single_page_application: '- (Optional) A single_page_application block as documented below, which configures single-page application (SPA) related settings for this application.'
            password.start_date: '- (Optional) The start date from which the password is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If this isn''t specified, the current date is used.  Changing this field forces a new resource to be created.'
            password.support_url: '- (Optional) URL of the application''s support page.'
            password.tags: '- (Optional) A set of tags to apply to the application for configuring specific behaviours of the application and linked service principals. Note that these are not provided for use by practitioners. Cannot be used together with the feature_tags block.'
            password.tags.template_id: '- (Optional) Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.'
            password.tags.terms_of_service_url: '- (Optional) URL of the application''s terms of service statement.'
            password.tags.web: '- (Optional) A web block as documented below, which configures web related settings for this application.'
            password.value: '- (Required) The generated password for the application.'
            public_client.redirect_uris: '- (Optional) A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid https or ms-appx-web URL.'
            publisher_domain: '- The verified publisher domain for the application.'
            required_resource_access.resource_access: '- (Required) A collection of resource_access blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.'
            required_resource_access.resource_access.id: '- (Required) The unique identifier for an app role or OAuth2 permission scope published by the resource application.'
            required_resource_access.resource_access.type: '- (Required) Specifies whether the id property references an app role or an OAuth2 permission scope. Possible values are Role or Scope.'
            required_resource_access.resource_app_id: '- (Required) The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.'
            single_page_application.redirect_uris: '- (Optional) A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid https URL.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
            web.homepage_url: '- (Optional) Home page or landing page of the application.'
            web.implicit_grant: '- (Optional) An implicit_grant block as documented above.'
            web.implicit_grant.access_token_issuance_enabled: '- (Optional) Whether this web application can request an access token using OAuth 2.0 implicit flow.'
            web.implicit_grant.id_token_issuance_enabled: '- (Optional) Whether this web application can request an ID token using OAuth 2.0 implicit flow.'
            web.logout_url: '- (Optional) The URL that will be used by Microsoft''s authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.'
            web.redirect_uris: '- (Optional) A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid http URL or a URN.'
        importStatements:
            - terraform import azuread_application.example /applications/00000000-0000-0000-0000-000000000000
    azuread_application_api_access:
        subCategory: Applications
        name: azuread_application_api_access
        title: ""
        examples:
            - name: example_msgraph
              manifest: |-
                {
                  "api_client_id": "${data.azuread_application_published_app_ids.well_known.result[\"MicrosoftGraph\"]}",
                  "application_id": "${azuread_application_registration.example.id}",
                  "role_ids": [
                    "${data.azuread_service_principal.msgraph.app_role_ids[\"Group.Read.All\"]}",
                    "${data.azuread_service_principal.msgraph.app_role_ids[\"User.Read.All\"]}"
                  ],
                  "scope_ids": [
                    "${data.azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.ReadWrite\"]}"
                  ]
                }
              references:
                api_client_id: data.azuread_application_published_app_ids.well_known.result["MicrosoftGraph"]
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application.example.id}"
                }
              references:
                application_id: azuread_application.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${required_resource_access}"
                          ]
                        }
                      ]
                    }
        argumentDocs:
            api_client_id: '- (Required) The client ID of the API to which access is being granted. Changing this forces a new resource to be created.'
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            role_ids: '- (Optional) A set of role IDs to be granted to the application, as published by the API.'
            scope_ids: '- (Optional) A set of scope IDs to be granted to the application, as published by the API.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_application_api_access.example /applications/00000000-0000-0000-0000-000000000000/apiAccess/11111111-1111-1111-1111-111111111111
    azuread_application_app_role:
        subCategory: Applications
        name: azuread_application_app_role
        title: ""
        examples:
            - name: example_administer
              manifest: |-
                {
                  "allowed_member_types": [
                    "User"
                  ],
                  "application_id": "${azuread_application_registration.example.id}",
                  "description": "My role description",
                  "display_name": "Administer",
                  "role_id": "${random_uuid.example_administrator.id}",
                  "value": "admin"
                }
              references:
                application_id: azuread_application_registration.example.id
                role_id: random_uuid.example_administrator.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
                random_uuid.example_administrator: '{}'
            - name: example_administer
              manifest: |-
                {
                  "application_id": "${azuread_application.example.id}"
                }
              references:
                application_id: azuread_application.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${app_role}"
                          ]
                        }
                      ]
                    }
        argumentDocs:
            allowed_member_types: '- (Required) A set of values to specify whether this app role definition can be assigned to users and groups by setting to User, or to other applications by setting to Application, or to both.'
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            description: '- (Required) Description of the app role that appears when the role is being assigned, and if the role functions as an application permissions, during the consent experiences.'
            display_name: '- (Required) Display name for the app role that appears during app role assignment and in consent experiences.'
            role_id: '- (Required) The unique identifier of the app role. Must be a valid UUID. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
            value: '- (Optional) The value that is used for the roles claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.'
        importStatements:
            - terraform import azuread_application_app_role.example /applications/00000000-0000-0000-0000-000000000000/appRoles/11111111-1111-1111-1111-111111111111
    azuread_application_certificate:
        subCategory: Applications
        name: azuread_application_certificate
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "end_date": "2021-05-01T01:02:03Z",
                  "type": "AsymmetricX509Cert",
                  "value": "${file(\"cert.pem\")}"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "encoding": "base64",
                  "end_date": "2021-05-01T01:02:03Z",
                  "type": "AsymmetricX509Cert",
                  "value": "${base64encode(file(\"cert.der\"))}"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application.example.id}",
                  "encoding": "hex",
                  "end_date": "${azurerm_key_vault_certificate.example.certificate_attribute[0].expires}",
                  "start_date": "${azurerm_key_vault_certificate.example.certificate_attribute[0].not_before}",
                  "type": "AsymmetricX509Cert",
                  "value": "${azurerm_key_vault_certificate.example.certificate_data}"
                }
              references:
                application_id: azuread_application.example.id
                end_date: azurerm_key_vault_certificate.example.certificate_attribute[0].expires
                start_date: azurerm_key_vault_certificate.example.certificate_attribute[0].not_before
                value: azurerm_key_vault_certificate.example.certificate_data
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example"
                    }
                azurerm_key_vault_certificate.example: |-
                    {
                      "certificate_policy": [
                        {
                          "issuer_parameters": [
                            {
                              "name": "Self"
                            }
                          ],
                          "key_properties": [
                            {
                              "exportable": true,
                              "key_size": 2048,
                              "key_type": "RSA",
                              "reuse_key": true
                            }
                          ],
                          "lifetime_action": [
                            {
                              "action": [
                                {
                                  "action_type": "AutoRenew"
                                }
                              ],
                              "trigger": [
                                {
                                  "days_before_expiry": 30
                                }
                              ]
                            }
                          ],
                          "secret_properties": [
                            {
                              "content_type": "application/x-pkcs12"
                            }
                          ],
                          "x509_certificate_properties": [
                            {
                              "extended_key_usage": [
                                "1.3.6.1.5.5.7.3.2"
                              ],
                              "key_usage": [
                                "dataEncipherment",
                                "digitalSignature",
                                "keyCertSign",
                                "keyEncipherment"
                              ],
                              "subject": "CN=${azuread_application.example.name}",
                              "subject_alternative_names": [
                                {
                                  "dns_names": [
                                    "internal.contoso.com",
                                    "domain.hello.world"
                                  ]
                                }
                              ],
                              "validity_in_months": 12
                            }
                          ]
                        }
                      ],
                      "key_vault_id": "${azurerm_key_vault.example.id}",
                      "name": "generated-cert"
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application for which this certificate should be created. Changing this field forces a new resource to be created.'
            encoding: '- (Optional) Specifies the encoding used for the supplied certificate data. Must be one of pem, base64 or hex. Defaults to pem.'
            end_date: '- (Optional) The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If omitted, the API will decide a suitable expiry date, which is typically around 2 years from the start date. Changing this field forces a new resource to be created.'
            end_date_relative: '- (Optional) A relative duration for which the certificate is valid until, for example 240h (10 days) or 2400h30m. Changing this field forces a new resource to be created.'
            key_id: '- (Optional) A UUID used to uniquely identify this certificate. If omitted, a random UUID will be automatically generated. Changing this field forces a new resource to be created.'
            start_date: '- (Optional) The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If this isn''t specified, the value is determined by Azure Active Directory and is usually the start date of the certificate for asymmetric keys, or the current timestamp for symmetric keys. Changing this field forces a new resource to be created.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
            type: '- (Required) The type of key/certificate. Must be one of AsymmetricX509Cert or Symmetric. Changing this fields forces a new resource to be created.'
            value: '- (Required) The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the encoding argument.'
        importStatements:
            - terraform import azuread_application_certificate.example 00000000-0000-0000-0000-000000000000/certificate/11111111-1111-1111-1111-111111111111
    azuread_application_fallback_public_client:
        subCategory: Applications
        name: azuread_application_fallback_public_client
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "enabled": true
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            enabled: '- (Required) Whether to enable the application as a fallback public client.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_application_fallback_public_client.example /applications/00000000-0000-0000-0000-000000000000/fallbackPublicClient
    azuread_application_federated_identity_credential:
        subCategory: Applications
        name: azuread_application_federated_identity_credential
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "audiences": [
                    "api://AzureADTokenExchange"
                  ],
                  "description": "Deployments for my-repo",
                  "display_name": "my-repo-deploy",
                  "issuer": "https://token.actions.githubusercontent.com",
                  "subject": "repo:my-organization/my-repo:environment:prod"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application for which this federated identity credential should be created. Changing this field forces a new resource to be created.'
            audiences: '- (Required) List of audiences that can appear in the external token. This specifies what should be accepted in the aud claim of incoming tokens.'
            credential_id: '- A UUID used to uniquely identify this federated identity credential.'
            description: '- (Optional) A description for the federated identity credential.'
            display_name: '- (Required) A unique display name for the federated identity credential. Changing this forces a new resource to be created.'
            issuer: '- (Required) The URL of the external identity provider, which must match the issuer claim of the external token being exchanged. The combination of the values of issuer and subject must be unique on the app.'
            subject: '- (Required) The identifier of the external software workload within the external identity provider. The combination of issuer and subject must be unique on the app.'
            timeouts.create: '- (Defaults to 15 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_application_federated_identity_credential.example 00000000-0000-0000-0000-000000000000/federatedIdentityCredential/11111111-1111-1111-1111-111111111111
    azuread_application_from_template:
        subCategory: Applications
        name: azuread_application_from_template
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "Example Application",
                  "template_id": "${data.azuread_application_template.example.template_id}"
                }
              references:
                template_id: data.azuread_application_template.example.template_id
        argumentDocs:
            application_id: '- The resource ID for the application.'
            application_object_id: '- The object ID for the application.'
            display_name: '- (Required) The display name for the application.'
            service_principal_id: '- The resource ID for the service principal.'
            service_principal_object_id: '- The object ID for the service principal.'
            template_id: '- (Required) Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_application_from_template.example /applicationTemplates/00000000-0000-0000-0000-000000000000/instantiate/11111111-1111-1111-1111-111111111111/22222222-2222-2222-2222-222222222222
    azuread_application_identifier_uri:
        subCategory: Applications
        name: azuread_application_identifier_uri
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "identifier_uri": "https://app.hashitown.com"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application.example.id}"
                }
              references:
                application_id: azuread_application.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${identifier_uris}"
                          ]
                        }
                      ]
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            identifier_uri: '- (Required) The user-defined URI that uniquely identifies an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_application_identifier_uri.example /applications/00000000-0000-0000-0000-000000000000/identifierUris/aHR0cHM6Ly9leGFtcGxlLm5ldC8=
    azuread_application_known_clients:
        subCategory: Applications
        name: azuread_application_known_clients
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "known_client_ids": [
                    "${azuread_application_registration.client.client_id}"
                  ]
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.client: |-
                    {
                      "display_name": "example client"
                    }
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            known_client_ids: '- (Required) A set of client IDs for the known applications.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_application_known_clients.example /applications/00000000-0000-0000-0000-000000000000/knownClients
    azuread_application_optional_claims:
        subCategory: Applications
        name: azuread_application_optional_claims
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "access_token": [
                    {
                      "name": "myclaim"
                    },
                    {
                      "name": "otherclaim"
                    }
                  ],
                  "application_id": "${azuread_application_registration.example.id}",
                  "id_token": [
                    {
                      "additional_properties": [
                        "emit_as_roles"
                      ],
                      "essential": true,
                      "name": "userclaim",
                      "source": "user"
                    }
                  ],
                  "saml2_token": [
                    {
                      "name": "samlexample"
                    }
                  ]
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
        argumentDocs:
            access_token: '- (Optional) One or more access_token blocks as documented below.'
            access_token.additional_properties: '- List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim. Possible values are: cloud_displayname, dns_domain_and_sam_account_name, emit_as_roles, include_externally_authenticated_upn_without_hash, include_externally_authenticated_upn, max_size_limit, netbios_domain_and_sam_account_name, on_premise_security_identifier, sam_account_name, and use_guid.'
            access_token.essential: '- Whether the claim specified by the client is necessary to ensure a smooth authorization experience.'
            access_token.name: '- The name of the optional claim.'
            access_token.source: '- The source of the claim. If source is absent, the claim is a predefined optional claim. If source is user, the value of name is the extension property from the user object.'
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            id_token: '- (Optional) One or more id_token blocks as documented below.'
            saml2_token: '- (Optional) One or more saml2_token blocks as documented below.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_application_optional_claims.example /applications/00000000-0000-0000-0000-000000000000
    azuread_application_owner:
        subCategory: Applications
        name: azuread_application_owner
        title: ""
        examples:
            - name: example_jane
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "owner_object_id": "${azuread_user.jane.object_id}"
                }
              references:
                application_id: azuread_application_registration.example.id
                owner_object_id: azuread_user.jane.object_id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
                azuread_user.jane: |-
                    {
                      "display_name": "Jane Fischer",
                      "password": "Ch@ngeMe",
                      "user_principal_name": "jane.fischer@hashitown.com"
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            owner_object_id: '- (Required) The object ID of the owner to assign to the application, typically a user or service principal. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_application_owner.example /applications/00000000-0000-0000-0000-000000000000/owners/11111111-1111-1111-1111-111111111111
    azuread_application_password:
        subCategory: Applications
        name: azuread_application_password
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "rotate_when_changed": {
                    "rotation": "${time_rotating.example.id}"
                  }
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
                time_rotating.example: |-
                    {
                      "rotation_days": 7
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application for which this password should be created. Changing this field forces a new resource to be created.'
            display_name: '- (Optional) A display name for the password. Changing this field forces a new resource to be created.'
            end_date: '- (Optional) The end date until which the password is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). Changing this field forces a new resource to be created.'
            end_date_relative: '- (Optional) A relative duration for which the password is valid until, for example 240h (10 days) or 2400h30m. Changing this field forces a new resource to be created.'
            key_id: '- A UUID used to uniquely identify this password credential.'
            rotate_when_changed: '- (Optional) A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.'
            start_date: '- (Optional) The start date from which the password is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If this isn''t specified, the current date is used.  Changing this field forces a new resource to be created.'
            timeouts.create: '- (Defaults to 15 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
            value: '- The password for this application, which is generated by Azure Active Directory.'
        importStatements: []
    azuread_application_permission_scope:
        subCategory: Applications
        name: azuread_application_permission_scope
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "admin_consent_description": "Administer the application",
                  "admin_consent_display_name": "Administer",
                  "application_id": "${azuread_application_registration.test.id}",
                  "scope_id": "${random_uuid.example_administer.id}",
                  "value": "administer"
                }
              references:
                application_id: azuread_application_registration.test.id
                scope_id: random_uuid.example_administer.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
                random_uuid.example_administer: '{}'
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application.example.id}"
                }
              references:
                application_id: azuread_application.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${api[0].oauth2_permission_scope}"
                          ]
                        }
                      ]
                    }
        argumentDocs:
            admin_consent_description: '- (Required) Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.'
            admin_consent_display_name: '- (Required) Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.'
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            scope_id: '- (Required) The unique identifier of the permission scope. Must be a valid UUID. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
            type: '- (Required) Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions.'
            user_consent_description: '- (Required) Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.'
            user_consent_display_name: '- (Required) Display name for the delegated permission that appears in the end user consent experience.'
            value: '- (Optional) The value that is used for the scp claim in OAuth access tokens.'
        importStatements:
            - terraform import azuread_application_permission_scope.example /applications/00000000-0000-0000-0000-000000000000/permissionScopes/11111111-1111-1111-1111-111111111111
    azuread_application_pre_authorized:
        subCategory: Applications
        name: azuread_application_pre_authorized
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application.authorizer.id}",
                  "authorized_client_id": "${azuread_application_registration.authorized.client_id}",
                  "permission_ids": [
                    "00000000-0000-0000-0000-000000000000",
                    "11111111-1111-1111-1111-111111111111"
                  ]
                }
              references:
                application_id: azuread_application.authorizer.id
                authorized_client_id: azuread_application_registration.authorized.client_id
              dependencies:
                azuread_application.authorizer: |-
                    {
                      "api": [
                        {
                          "oauth2_permission_scope": [
                            {
                              "admin_consent_description": "Administer the application",
                              "admin_consent_display_name": "Administer",
                              "enabled": true,
                              "id": "00000000-0000-0000-0000-000000000000",
                              "type": "Admin",
                              "value": "administer"
                            },
                            {
                              "admin_consent_description": "Access the application",
                              "admin_consent_display_name": "Access",
                              "enabled": true,
                              "id": "11111111-1111-1111-1111-111111111111",
                              "type": "User",
                              "user_consent_description": "Access the application",
                              "user_consent_display_name": "Access",
                              "value": "user_impersonation"
                            }
                          ]
                        }
                      ],
                      "display_name": "example-authorizing-app"
                    }
                azuread_application_registration.authorized: |-
                    {
                      "display_name": "example-authorized-app"
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.'
            authorized_client_id: '- (Required) The client ID of the application being authorized. Changing this field forces a new resource to be created.'
            permission_ids: '- (Required) A set of permission scope IDs required by the authorized application.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_application_pre_authorized.example 00000000-0000-0000-0000-000000000000/preAuthorizedApplication/11111111-1111-1111-1111-111111111111
    azuread_application_redirect_uris:
        subCategory: Applications
        name: azuread_application_redirect_uris
        title: ""
        examples:
            - name: example_public
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "redirect_uris": [
                    "myapp://auth",
                    "sample.mobile.app.bundie.id://auth",
                    "https://login.microsoftonline.com/common/oauth2/nativeclient",
                    "https://login.live.com/oauth20_desktop.srf",
                    "ms-appx-web://Microsoft.AAD.BrokerPlugin/00000000-1111-1111-1111-222222222222",
                    "urn:ietf:wg:oauth:2.0:foo"
                  ],
                  "type": "PublicClient"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
            - name: example_spa
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "redirect_uris": [
                    "https://mobile.hashitown.com/",
                    "https://beta.hashitown.com/"
                  ],
                  "type": "SPA"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
            - name: example_web
              manifest: |-
                {
                  "application_id": "${azuread_application_registration.example.id}",
                  "redirect_uris": [
                    "https://app.hashitown.com/",
                    "https://classic.hashitown.com/",
                    "urn:ietf:wg:oauth:2.0:oob"
                  ],
                  "type": "Web"
                }
              references:
                application_id: azuread_application_registration.example.id
              dependencies:
                azuread_application_registration.example: |-
                    {
                      "display_name": "example"
                    }
        argumentDocs:
            application_id: '- (Required) The resource ID of the application registration. Changing this forces a new resource to be created.'
            redirect_uris: '- (Required) A set of redirect URIs to assign to the application.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
            type: '- (Required) The type of redirect URIs to manage. Must be one of: PublicClient, SPA, or Web. Changing this forces a new resource to be created.'
        importStatements:
            - terraform import azuread_application_redirect_uris.example /applications/00000000-0000-0000-0000-000000000000/redirectUris/Web
    azuread_application_registration:
        subCategory: Applications
        name: azuread_application_registration
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "description": "My example application",
                  "display_name": "Example Application",
                  "homepage_url": "https://app.hashitown.com/",
                  "logout_url": "https://app.hashitown.com/logout",
                  "marketing_url": "https://hashitown.com/",
                  "privacy_statement_url": "https://hashitown.com/privacy",
                  "sign_in_audience": "AzureADMyOrg",
                  "support_url": "https://support.hashitown.com/",
                  "terms_of_service_url": "https://hashitown.com/terms"
                }
        argumentDocs:
            client_id: '- The Client ID for the application, which is globally unique.'
            description: '- (Optional) A description of the application, as shown to end users.'
            disabled_by_microsoft: '- Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. DisabledDueToViolationOfServicesAgreement'
            display_name: '- (Required) The display name for the application.'
            group_membership_claims: '- (Optional) Configures the groups claim issued in a user or OAuth access token that the app expects. Possible values are None, SecurityGroup, DirectoryRole, ApplicationGroup or All.'
            homepage_url: '- (Optional) Home page or landing page of the application.'
            id: '- The Terraform resource ID for the application, for use when referencing this resource in your Terraform configuration.'
            implicit_access_token_issuance_enabled: '- (Optional) Whether this web application can request an access token using OAuth implicit flow.'
            implicit_id_token_issuance_enabled: '- (Optional) Whether this web application can request an ID token using OAuth implicit flow.'
            logout_url: '- (Optional) The URL that will be used by Microsoft''s authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.'
            marketing_url: '- (Optional) URL of the marketing page for the application.'
            notes: '- (Optional) User-specified notes relevant for the management of the application.'
            object_id: '- The object ID of the application within the tenant.'
            privacy_statement_url: '- (Optional) URL of the privacy statement for the application.'
            publisher_domain: '- The verified publisher domain for the application.'
            requested_access_token_version: '- (Optional) The access token version expected by this resource. Must be one of 1 or 2, and must be 2 when sign_in_audience is either AzureADandPersonalMicrosoftAccount or PersonalMicrosoftAccount Defaults to 2.'
            service_management_reference: '- (Optional) References application context information from a Service or Asset Management database.'
            sign_in_audience: '- (Optional) The Microsoft account types that are supported for the current application. Must be one of AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount or PersonalMicrosoftAccount. Defaults to AzureADMyOrg.'
            support_url: '- (Optional) URL of the support page for the application.'
            terms_of_service_url: '- (Optional) URL of the terms of service statement for the application.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_application_registration.example /applications/00000000-0000-0000-0000-000000000000
    azuread_authentication_strength_policy:
        subCategory: Policies
        name: azuread_authentication_strength_policy
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "allowed_combinations": [
                    "fido2",
                    "password"
                  ],
                  "description": "Policy for demo purposes",
                  "display_name": "Example Authentication Strength Policy"
                }
            - name: example2
              manifest: |-
                {
                  "allowed_combinations": [
                    "fido2",
                    "password",
                    "deviceBasedPush",
                    "temporaryAccessPassOneTime",
                    "federatedMultiFactor",
                    "federatedSingleFactor",
                    "hardwareOath,federatedSingleFactor",
                    "microsoftAuthenticatorPush,federatedSingleFactor",
                    "password,hardwareOath",
                    "password,microsoftAuthenticatorPush",
                    "password,sms",
                    "password,softwareOath",
                    "password,voice",
                    "sms",
                    "sms,federatedSingleFactor",
                    "softwareOath,federatedSingleFactor",
                    "temporaryAccessPassMultiUse",
                    "voice,federatedSingleFactor",
                    "windowsHelloForBusiness",
                    "x509CertificateMultiFactor",
                    "x509CertificateSingleFactor"
                  ],
                  "description": "Policy for demo purposes with all possible combinations",
                  "display_name": "Example Authentication Strength Policy"
                }
        argumentDocs:
            allowed_combinations: '- (Required) List of allowed authentication methods for this authentication strength policy.'
            description: '- (Optional) The description for this authentication strength policy.'
            display_name: '- (Required) The friendly name for this authentication strength policy.'
            id: '- The ID of the authentication strength policy.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_authentication_strength_policy.my_policy 00000000-0000-0000-0000-000000000000
    azuread_claims_mapping_policy:
        subCategory: Policies
        name: azuread_claims_mapping_policy
        title: ""
        examples:
            - name: my_policy
              manifest: |-
                {
                  "definition": [
                    "${jsonencode(\n      {\n        ClaimsMappingPolicy = {\n          ClaimsSchema = [\n            {\n              ID            = \"employeeid\"\n              JwtClaimType  = \"name\"\n              SamlClaimType = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"\n              Source        = \"user\"\n            },\n            {\n              ID            = \"tenantcountry\"\n              JwtClaimType  = \"country\"\n              SamlClaimType = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country\"\n              Source        = \"company\"\n            }\n          ]\n          IncludeBasicClaimSet = \"true\"\n          Version              = 1\n        }\n      }\n    )}"
                  ],
                  "display_name": "My Policy"
                }
        argumentDocs:
            definition: '- (Required) The claims mapping policy. This is a JSON formatted string, for which the jsonencode() function can be used.'
            display_name: '- (Required) The display name for this Claims Mapping Policy.'
            id: '- The ID of the Claims Mapping Policy.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_claims_mapping_policy.my_policy 00000000-0000-0000-0000-000000000000
    azuread_conditional_access_policy:
        subCategory: Conditional Access
        name: azuread_conditional_access_policy
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "conditions": [
                    {
                      "applications": [
                        {
                          "excluded_applications": [],
                          "included_applications": [
                            "All"
                          ]
                        }
                      ],
                      "client_app_types": [
                        "all"
                      ],
                      "devices": [
                        {
                          "filter": [
                            {
                              "mode": "exclude",
                              "rule": "device.operatingSystem eq \"Doors\""
                            }
                          ]
                        }
                      ],
                      "locations": [
                        {
                          "excluded_locations": [
                            "AllTrusted"
                          ],
                          "included_locations": [
                            "All"
                          ]
                        }
                      ],
                      "platforms": [
                        {
                          "excluded_platforms": [
                            "iOS"
                          ],
                          "included_platforms": [
                            "android"
                          ]
                        }
                      ],
                      "sign_in_risk_levels": [
                        "medium"
                      ],
                      "user_risk_levels": [
                        "medium"
                      ],
                      "users": [
                        {
                          "excluded_users": [
                            "GuestsOrExternalUsers"
                          ],
                          "included_users": [
                            "All"
                          ]
                        }
                      ]
                    }
                  ],
                  "display_name": "example policy",
                  "grant_controls": [
                    {
                      "built_in_controls": [
                        "mfa"
                      ],
                      "operator": "OR"
                    }
                  ],
                  "session_controls": [
                    {
                      "application_enforced_restrictions_enabled": true,
                      "cloud_app_security_policy": "monitorOnly",
                      "disable_resilience_defaults": false,
                      "sign_in_frequency": 10,
                      "sign_in_frequency_period": "hours"
                    }
                  ],
                  "state": "disabled"
                }
            - name: example
              manifest: |-
                {
                  "conditions": [
                    {
                      "applications": [
                        {
                          "included_applications": [
                            "All"
                          ]
                        }
                      ],
                      "client_app_types": [
                        "all"
                      ],
                      "client_applications": [
                        {
                          "excluded_service_principals": [],
                          "included_service_principals": [
                            "${data.azuread_client_config.current.object_id}"
                          ]
                        }
                      ],
                      "users": [
                        {
                          "included_users": [
                            "None"
                          ]
                        }
                      ]
                    }
                  ],
                  "display_name": "example policy",
                  "grant_controls": [
                    {
                      "built_in_controls": [
                        "block"
                      ],
                      "operator": "OR"
                    }
                  ],
                  "state": "disabled"
                }
            - name: example
              manifest: |-
                {
                  "conditions": [
                    {
                      "applications": [
                        {
                          "included_applications": [
                            "All"
                          ]
                        }
                      ],
                      "client_app_types": [
                        "all"
                      ],
                      "client_applications": [
                        {
                          "excluded_service_principals": [
                            "${data.azuread_client_config.current.object_id}"
                          ],
                          "included_service_principals": [
                            "ServicePrincipalsInMyTenant"
                          ]
                        }
                      ],
                      "users": [
                        {
                          "included_users": [
                            "None"
                          ]
                        }
                      ]
                    }
                  ],
                  "display_name": "example policy",
                  "grant_controls": [
                    {
                      "built_in_controls": [
                        "block"
                      ],
                      "operator": "OR"
                    }
                  ],
                  "state": "disabled"
                }
        argumentDocs:
            client_applications.excluded_service_principals: '- (Optional) A list of service principal IDs explicitly excluded in the policy.'
            client_applications.included_service_principals: '- (Optional) A list of service principal IDs explicitly included in the policy. Can be set to ServicePrincipalsInMyTenant to include all service principals. This is mandatory value when at least one excluded_service_principals is set.'
            conditions: '- (Required) A conditions block as documented below, which specifies the rules that must be met for the policy to apply.'
            conditions.applications: '- (Required) An applications block as documented below, which specifies applications and user actions included in and excluded from the policy.'
            conditions.applications.excluded_applications: '- (Optional) A list of application IDs explicitly excluded from the policy. Can also be set to Office365.'
            conditions.applications.included_applications: '- (Optional) A list of application IDs the policy applies to, unless explicitly excluded (in excluded_applications). Can also be set to All, None or Office365. Cannot be specified with included_user_actions. One of included_applications or included_user_actions must be specified.'
            conditions.applications.included_user_actions: '- (Optional) A list of user actions to include. Supported values are urn:user:registerdevice and urn:user:registersecurityinfo. Cannot be specified with included_applications. One of included_applications or included_user_actions must be specified.'
            conditions.client_app_types: '- (Required) A list of client application types included in the policy. Possible values are: all, browser, mobileAppsAndDesktopClients, exchangeActiveSync, easSupported and other.'
            conditions.client_applications: '- (Optional) An client_applications block as documented below, which specifies service principals included in and excluded from the policy.'
            conditions.devices: '- (Optional) A devices block as documented below, which describes devices to be included in and excluded from the policy. A devices block can be added to an existing policy, but removing the devices block forces a new resource to be created.'
            conditions.locations: '- (Optional) A locations block as documented below, which specifies locations included in and excluded from the policy.'
            conditions.platforms: '- (Optional) A platforms block as documented below, which specifies platforms included in and excluded from the policy.'
            conditions.service_principal_risk_levels: '- (Optional) A list of service principal sign-in risk levels included in the policy. Possible values are: low, medium, high, none, unknownFutureValue.'
            conditions.sign_in_risk_levels: '- (Optional) A list of user sign-in risk levels included in the policy. Possible values are: low, medium, high, hidden, none, unknownFutureValue.'
            conditions.user_risk_levels: '- (Optional) A list of user risk levels included in the policy. Possible values are: low, medium, high, hidden, none, unknownFutureValue.'
            conditions.users: '- (Required) A users block as documented below, which specifies users, groups, and roles included in and excluded from the policy.'
            devices.filter: '- (Optional) A filter block as described below.'
            devices.filter.mode: '- (Required) Whether to include in, or exclude from, matching devices from the policy. Supported values are include or exclude.'
            devices.filter.rule: '- (Required) Condition filter to match devices. For more information, see official documentation.'
            display_name: '- (Required) The friendly name for this Conditional Access Policy.'
            grant_controls: '- (Optional) A grant_controls block as documented below, which specifies the grant controls that must be fulfilled to pass the policy.'
            grant_controls.authentication_strength_policy_id: '- (Optional) ID of an Authentication Strength Policy to use in this policy.'
            grant_controls.built_in_controls: '- (Optional) List of built-in controls required by the policy. Possible values are: block, mfa, approvedApplication, compliantApplication, compliantDevice, domainJoinedDevice, passwordChange or unknownFutureValue.'
            grant_controls.custom_authentication_factors: '- (Optional) List of custom controls IDs required by the policy.'
            grant_controls.operator: '- (Required) Defines the relationship of the grant controls. Possible values are: AND, OR.'
            grant_controls.state: '- (Required) Specifies the state of the policy object. Possible values are: enabled, disabled and enabledForReportingButNotEnforced'
            grant_controls.terms_of_use: '- (Optional) List of terms of use IDs required by the policy.'
            guests_or_external_users.external_tenants: '- (Optional) An external_tenants block as documented below, which specifies external tenants in a policy scope.'
            guests_or_external_users.external_tenants.members: '- (Optional) A list tenant IDs. Can only be specified if membership_kind is enumerated.'
            guests_or_external_users.external_tenants.membership_kind: '- (Required) The external tenant membership kind. Possible values are: all, enumerated, unknownFutureValue.'
            guests_or_external_users.guest_or_external_user_types: '- (Required) A list of guest or external user types. Possible values are: b2bCollaborationGuest, b2bCollaborationMember, b2bDirectConnectUser, internalGuest, none, otherExternalUser, serviceProvider, unknownFutureValue.'
            id: '- The ID of the Conditional Access Policy.'
            locations.excluded_locations: '- (Optional) A list of location IDs excluded from scope of policy. Can also be set to AllTrusted.'
            locations.included_locations: '- (Required) A list of location IDs in scope of policy unless explicitly excluded. Can also be set to All, or AllTrusted.'
            platforms.excluded_platforms: '- (Optional) A list of platforms explicitly excluded from the policy. Possible values are: all, android, iOS, linux, macOS, windows, windowsPhone or unknownFutureValue.'
            platforms.included_platforms: '- (Required) A list of platforms the policy applies to, unless explicitly excluded. Possible values are: all, android, iOS, linux, macOS, windows, windowsPhone or unknownFutureValue.'
            session_controls: '- (Optional) A session_controls block as documented below, which specifies the session controls that are enforced after sign-in.'
            session_controls.application_enforced_restrictions_enabled: '- (Optional) Whether application enforced restrictions are enabled. Defaults to false.'
            session_controls.cloud_app_security_policy: '- (Optional) Enables cloud app security and specifies the cloud app security policy to use. Possible values are: blockDownloads, mcasConfigured, monitorOnly or unknownFutureValue.'
            session_controls.disable_resilience_defaults: '- (Optional) Disables resilience defaults. Defaults to false.'
            session_controls.persistent_browser_mode: '- (Optional) Session control to define whether to persist cookies. Possible values are: always or never.'
            session_controls.sign_in_frequency: '- (Optional) Number of days or hours to enforce sign-in frequency. Required when sign_in_frequency_period is specified.'
            session_controls.sign_in_frequency_authentication_type: '- (Optional) Authentication type for enforcing sign-in frequency. Possible values are: primaryAndSecondaryAuthentication or secondaryAuthentication. Defaults to primaryAndSecondaryAuthentication.'
            session_controls.sign_in_frequency_interval: '- (Optional) The interval to apply to sign-in frequency control. Possible values are: timeBased or everyTime. Defaults to timeBased.'
            session_controls.sign_in_frequency_period: '- (Optional) The time period to enforce sign-in frequency. Possible values are: hours or days. Required when sign_in_frequency_period is specified.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 15 minutes) Used when updating the resource.'
            users.excluded_groups: '- (Optional) A list of group IDs excluded from scope of policy.'
            users.excluded_guests_or_external_users: '- (Optional) A guests_or_external_users block as documented below, which specifies internal guests and external users excluded from scope of policy.'
            users.excluded_roles: '- (Optional) A list of role IDs excluded from scope of policy.'
            users.excluded_users: '- (Optional) A list of user IDs excluded from scope of policy and/or GuestsOrExternalUsers.'
            users.included_groups: '- (Optional) A list of group IDs in scope of policy unless explicitly excluded.'
            users.included_guests_or_external_users: '- (Optional) A guests_or_external_users block as documented below, which specifies internal guests and external users in scope of policy.'
            users.included_roles: '- (Optional) A list of role IDs in scope of policy unless explicitly excluded.'
            users.included_users: '- (Optional) A list of user IDs in scope of policy unless explicitly excluded, or None or All or GuestsOrExternalUsers.'
        importStatements:
            - terraform import azuread_conditional_access_policy.my_location 00000000-0000-0000-0000-000000000000
    azuread_custom_directory_role:
        subCategory: Directory Roles
        name: azuread_custom_directory_role
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Allows reading applications and updating groups",
                  "display_name": "My Custom Role",
                  "enabled": true,
                  "permissions": [
                    {
                      "allowed_resource_actions": [
                        "microsoft.directory/applications/basic/update",
                        "microsoft.directory/applications/create",
                        "microsoft.directory/applications/standard/read"
                      ]
                    },
                    {
                      "allowed_resource_actions": [
                        "microsoft.directory/groups/allProperties/read",
                        "microsoft.directory/groups/allProperties/read",
                        "microsoft.directory/groups/basic/update",
                        "microsoft.directory/groups/create",
                        "microsoft.directory/groups/delete"
                      ]
                    }
                  ],
                  "version": "1.0"
                }
        argumentDocs:
            description: '- (Optional) The description of the custom directory role.'
            display_name: '- (Required) The display name of the custom directory role.'
            enabled: '- (Required) Indicates whether the role is enabled for assignment.'
            object_id: '- The object ID of the custom directory role.'
            permissions: '- (Required) A collection of permissions blocks as documented below.'
            permissions.allowed_resource_actions: '- (Required) A set of tasks that can be performed on a resource. For more information, see the Permissions Reference documentation.'
            template_id: '- (Optional) Custom template identifier that is typically used if one needs an identifier to be the same across different directories. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
            version: '- (Required) - The version of the role definition. This can be any arbitrary string between 1-128 characters.'
        importStatements: []
    azuread_directory_role:
        subCategory: Directory Roles
        name: azuread_directory_role
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "template_id": "00000000-0000-0000-0000-000000000000"
                }
            - name: example
              manifest: |-
                {
                  "display_name": "Printer administrator"
                }
        argumentDocs:
            description: '- The description of the directory role.'
            display_name: '- (Optional) The display name of the directory role to activate. Changing this forces a new resource to be created.'
            object_id: '- The object ID of the directory role.'
            template_id: '- (Optional) The object ID of the role template from which to activate the directory role. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements: []
    azuread_directory_role_assignment:
        subCategory: Directory Roles
        name: azuread_directory_role_assignment
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "principal_object_id": "${data.azuread_user.example.object_id}",
                  "role_id": "${azuread_directory_role.example.template_id}"
                }
              references:
                principal_object_id: data.azuread_user.example.object_id
                role_id: azuread_directory_role.example.template_id
              dependencies:
                azuread_directory_role.example: |-
                    {
                      "display_name": "Security administrator"
                    }
            - name: example
              manifest: |-
                {
                  "principal_object_id": "${data.azuread_user.example.object_id}",
                  "role_id": "${azuread_custom_directory_role.example.object_id}"
                }
              references:
                principal_object_id: data.azuread_user.example.object_id
                role_id: azuread_custom_directory_role.example.object_id
              dependencies:
                azuread_custom_directory_role.example: |-
                    {
                      "display_name": "My Custom Role",
                      "enabled": true,
                      "permissions": [
                        {
                          "allowed_resource_actions": [
                            "microsoft.directory/applications/basic/update",
                            "microsoft.directory/applications/standard/read"
                          ]
                        }
                      ],
                      "version": "1.0"
                    }
            - name: example
              manifest: |-
                {
                  "directory_scope_id": "${format(\"/%s\", azuread_application.example.object_id)}",
                  "principal_object_id": "${data.azuread_user.example.object_id}",
                  "role_id": "${azuread_directory_role.example.template_id}"
                }
              references:
                principal_object_id: data.azuread_user.example.object_id
                role_id: azuread_directory_role.example.template_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "My Application"
                    }
                azuread_directory_role.example: |-
                    {
                      "display_name": "Cloud application administrator"
                    }
        argumentDocs:
            app_scope_id: '- (Optional) Identifier of the app-specific scope when the assignment scope is app-specific. Cannot be used with directory_scope_id. See official documentation for example usage. Changing this forces a new resource to be created.'
            directory_scope_id: '- (Optional) Identifier of the directory object representing the scope of the assignment. Cannot be used with app_scope_id. See official documentation for example usage. Changing this forces a new resource to be created.'
            principal_object_id: '- (Required) The object ID of the principal for you want to create a role assignment. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.'
            role_id: '- (Required) The template ID (in the case of built-in roles) or object ID (in the case of custom roles) of the directory role you want to assign. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_directory_role_assignment.example ePROZI_iKE653D_d6aoLHyr-lKgHI8ZGiIdz8CLVcng-1
    azuread_directory_role_eligibility_schedule_request:
        subCategory: Directory Roles
        name: azuread_directory_role_eligibility_schedule_request
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "directory_scope_id": "/",
                  "justification": "Example",
                  "principal_id": "${azuread_user.example.object_id}",
                  "role_definition_id": "${azuread_directory_role.example.template_id}"
                }
              references:
                principal_id: azuread_user.example.object_id
                role_definition_id: azuread_directory_role.example.template_id
              dependencies:
                azuread_directory_role.example: |-
                    {
                      "display_name": "Application Administrator"
                    }
        argumentDocs:
            directory_scope_id: '- (Required) Identifier of the directory object representing the scope of the role eligibility. Changing this forces a new resource to be created.'
            justification: '- (Required) Justification for why the principal is granted the role eligibility. Changing this forces a new resource to be created.'
            principal_id: '- (Required) The object ID of the principal to granted the role eligibility. Changing this forces a new resource to be created.'
            role_definition_id: '- (Required) The template ID (in the case of built-in roles) or object ID (in the case of custom roles) of the directory role you want to assign. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_directory_role_eligibility_schedule_request.example 822ec710-4c9f-4f71-a27a-451759cc7522
    azuread_directory_role_member:
        subCategory: Directory Roles
        name: azuread_directory_role_member
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "member_object_id": "${data.azuread_user.example.object_id}",
                  "role_object_id": "${azuread_directory_role.example.object_id}"
                }
              references:
                member_object_id: data.azuread_user.example.object_id
                role_object_id: azuread_directory_role.example.object_id
              dependencies:
                azuread_directory_role.example: |-
                    {
                      "display_name": "Security administrator"
                    }
        argumentDocs:
            member_object_id: '- (Required) The object ID of the principal you want to add as a member to the directory role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.'
            role_object_id: '- (Required) The object ID of the directory role you want to add the member to. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_directory_role_member.example 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111
    azuread_group:
        subCategory: Groups
        name: azuread_group
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "example",
                  "owners": [
                    "${data.azuread_client_config.current.object_id}"
                  ],
                  "security_enabled": true
                }
            - name: example
              manifest: |-
                {
                  "display_name": "example",
                  "mail_enabled": true,
                  "mail_nickname": "ExampleGroup",
                  "owners": [
                    "${data.azuread_client_config.current.object_id}",
                    "${azuread_user.group_owner.object_id}"
                  ],
                  "security_enabled": true,
                  "types": [
                    "Unified"
                  ]
                }
              dependencies:
                azuread_user.group_owner: |-
                    {
                      "display_name": "Group Owner",
                      "mail_nickname": "example-group-owner",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "example-group-owner@hashicorp.com"
                    }
            - name: example
              manifest: |-
                {
                  "display_name": "MyGroup",
                  "members": [
                    "${azuread_user.example.object_id}"
                  ],
                  "owners": [
                    "${data.azuread_client_config.current.object_id}"
                  ],
                  "security_enabled": true
                }
              dependencies:
                azuread_user.example: |-
                    {
                      "display_name": "J Doe",
                      "owners": [
                        "${data.azuread_client_config.current.object_id}"
                      ],
                      "password": "notSecure123",
                      "user_principal_name": "jdoe@hashicorp.com"
                    }
            - name: example
              manifest: |-
                {
                  "display_name": "MyGroup",
                  "dynamic_membership": [
                    {
                      "enabled": true,
                      "rule": "user.department -eq \"Sales\""
                    }
                  ],
                  "owners": [
                    "${data.azuread_client_config.current.object_id}"
                  ],
                  "security_enabled": true,
                  "types": [
                    "DynamicMembership"
                  ]
                }
        argumentDocs:
            administrative_unit_ids: '- (Optional) The object IDs of administrative units in which the group is a member. If specified, new groups will be created in the scope of the first administrative unit and added to the others. If empty, new groups will be created at the tenant level.'
            assignable_to_role: '- (Optional) Indicates whether this group can be assigned to an Azure Active Directory role. Defaults to false. Can only be set to true for security-enabled groups. Changing this forces a new resource to be created.'
            auto_subscribe_new_members: '- (Optional) Indicates whether new members added to the group will be auto-subscribed to receive email notifications. Can only be set for Unified groups.'
            behaviors: '- (Optional) A set of behaviors for a Microsoft 365 group. Possible values are AllowOnlyMembersToPost, HideGroupInOutlook, SkipExchangeInstantOn, SubscribeMembersToCalendarEventsDisabled, SubscribeNewGroupMembers and WelcomeEmailDisabled. See official documentation for more details. Changing this forces a new resource to be created.'
            description: '- (Optional) The description for the group.'
            display_name: '- (Required) The display name for the group.'
            dynamic_membership: '- (Optional) A dynamic_membership block as documented below. Required when types contains DynamicMembership. Cannot be used with the members property.'
            dynamic_membership.enabled: '- (Required) Whether rule processing is "On" (true) or "Paused" (false).'
            dynamic_membership.rule: '- (Required) The rule that determines membership of this group. For more information, see official documentation on membership rules syntax.'
            external_senders_allowed: '- (Optional) Indicates whether people external to the organization can send messages to the group. Can only be set for Unified groups.'
            hide_from_address_lists: '- (Optional) Indicates whether the group is displayed in certain parts of the Outlook user interface: in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups. Can only be set for Unified groups.'
            hide_from_outlook_clients: '- (Optional) Indicates whether the group is displayed in Outlook clients, such as Outlook for Windows and Outlook on the web. Can only be set for Unified groups.'
            mail: '- The SMTP address for the group.'
            mail_enabled: '- (Optional) Whether the group is a mail enabled, with a shared group mailbox. At least one of mail_enabled or security_enabled must be specified. Only Microsoft 365 groups can be mail enabled (see the types property).'
            mail_nickname: '- (Optional) The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.'
            members: '- (Optional) A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals. Cannot be used with the dynamic_membership block.'
            object_id: '- The object ID of the group.'
            onpremises_domain_name: '- The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_group_type: '- (Optional) The on-premises group type that the AAD group will be written as, when writeback is enabled. Possible values are UniversalDistributionGroup, UniversalMailEnabledSecurityGroup, or UniversalSecurityGroup.'
            onpremises_netbios_name: '- The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_sam_account_name: '- The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_security_identifier: '- The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_sync_enabled: '- Whether this group is synchronised from an on-premises directory (true), no longer synchronised (false), or has never been synchronised (null).'
            owners: '- (Optional) A set of object IDs of principals that will be granted ownership of the group. Supported object types are users or service principals. By default, the principal being used to execute Terraform is assigned as the sole owner. Groups cannot be created with no owners or have all their owners removed.'
            preferred_language: '- The preferred language for a Microsoft 365 group, in ISO 639-1 notation.'
            prevent_duplicate_names: '- (Optional) If true, will return an error if an existing group is found with the same name. Defaults to false.'
            provisioning_options: '- (Optional) A set of provisioning options for a Microsoft 365 group. The only supported value is Team. See official documentation for details. Changing this forces a new resource to be created.'
            proxy_addresses: '- List of email addresses for the group that direct to the same group mailbox.'
            security_enabled: '- (Optional) Whether the group is a security group for controlling access to in-app resources. At least one of security_enabled or mail_enabled must be specified. A Microsoft 365 group can be security enabled and mail enabled (see the types property).'
            theme: '- (Optional) The colour theme for a Microsoft 365 group. Possible values are Blue, Green, Orange, Pink, Purple, Red or Teal. By default, no theme is set.'
            timeouts.create: '- (Defaults to 20 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 20 minutes) Used when updating the resource.'
            types: '- (Optional) A set of group types to configure for the group. Supported values are DynamicMembership, which denotes a group with dynamic membership, and Unified, which specifies a Microsoft 365 group. Required when mail_enabled is true. Changing this forces a new resource to be created.'
            visibility: '- (Optional) The group join policy and group content visibility. Possible values are Private, Public, or Hiddenmembership. Only Microsoft 365 groups can have Hiddenmembership visibility and this value must be set when the group is created. By default, security groups will receive Private visibility and Microsoft 365 groups will receive Public visibility.'
            writeback_enabled: '- (Optional) Whether the group will be written back to the configured on-premises Active Directory when Azure AD Connect is used.'
        importStatements:
            - terraform import azuread_group.my_group 00000000-0000-0000-0000-000000000000
    azuread_group_member:
        subCategory: Groups
        name: azuread_group_member
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "group_object_id": "${azuread_group.example.id}",
                  "member_object_id": "${data.azuread_user.example.id}"
                }
              references:
                group_object_id: azuread_group.example.id
                member_object_id: data.azuread_user.example.id
              dependencies:
                azuread_group.example: |-
                    {
                      "display_name": "my_group",
                      "security_enabled": true
                    }
        argumentDocs:
            group_object_id: '- (Required) The object ID of the group you want to add the member to. Changing this forces a new resource to be created.'
            member_object_id: '- (Required) The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_group_member.example 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111
    azuread_group_role_management_policy:
        subCategory: Policies
        name: azuread_group_role_management_policy
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "active_assignment_rules": [
                    {
                      "expire_after": "P365D"
                    }
                  ],
                  "eligible_assignment_rules": [
                    {
                      "expiration_required": false
                    }
                  ],
                  "group_id": "${azuread_group.example.id}",
                  "notification_rules": [
                    {
                      "eligible_assignments": [
                        {
                          "approver_notifications": [
                            {
                              "additional_recipients": [
                                "someone@example.com",
                                "someone.else@example.com"
                              ],
                              "default_recipients": false,
                              "notification_level": "Critical"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "role_id": "member"
                }
              references:
                group_id: azuread_group.example.id
              dependencies:
                azuread_group.example: |-
                    {
                      "display_name": "group-name",
                      "security_enabled": true
                    }
                azuread_user.member: |-
                    {
                      "display_name": "J. Doe",
                      "mail_nickname": "jdoe",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "jdoe@hashicorp.com"
                    }
        argumentDocs:
            activation_rules: '- (Optional) An activation_rules block as defined below.'
            activation_rules.approval_stage: '- (Optional) An approval_stage block as defined below.'
            activation_rules.maximum_duration: '- (Optional) The maximum length of time an activated role can be valid, in an ISO8601 Duration format (e.g. PT8H). Valid range is PT30M to PT23H30M, in 30 minute increments, or PT1D.'
            activation_rules.require_approval: '- (Optional) Is approval required for activation. If true an approval_stage block must be provided.'
            activation_rules.require_justification: '- (Optional) Is a justification required during activation of the role.'
            activation_rules.require_multifactor_authentication: '- (Optional) Is multi-factor authentication required to activate the role. Conflicts with required_conditional_access_authentication_context.'
            activation_rules.require_ticket_info: '- (Optional) Is ticket information requrired during activation of the role.'
            activation_rules.required_conditional_access_authentication_context: '- (Optional) The Entra ID Conditional Access context that must be present for activation (e.g c1). Conflicts with require_multifactor_authentication.'
            active_assignment_rules: '- (Optional) An active_assignment_rules block as defined below.'
            active_assignment_rules.expiration_required: '- (Optional) Must an assignment have an expiry date. false allows permanent assignment.'
            active_assignment_rules.expire_after: '- (Optional) The maximum length of time an assignment can be valid, as an ISO8601 duration. Permitted values: P15D, P30D, P90D, P180D, or P365D.'
            active_assignment_rules.require_justification: '- (Optional) Is a justification required to create new assignments.'
            active_assignment_rules.require_multifactor_authentication: '- (Optional) Is multi-factor authentication required to create new assignments.'
            active_assignment_rules.require_ticket_info: '- (Optional) Is ticket information required to create new assignments.'
            approval_stage.primary_approver: blocks as defined below.
            description: '- (String) The description of this policy.'
            display_name: '- (String) The display name of this policy.'
            eligible_assignment_rules: '- (Optional) An eligible_assignment_rules block as defined below.'
            eligible_assignment_rules.expiration_required: '- Must an assignment have an expiry date. false allows permanent assignment.'
            eligible_assignment_rules.expire_after: '- The maximum length of time an assignment can be valid, as an ISO8601 duration. Permitted values: P15D, P30D, P90D, P180D, or P365D.'
            group_id: '- (Required) The ID of the Azure AD group for which the policy applies.'
            id: '- (String) The ID of this policy.'
            notification_rules: '- (Optional) A notification_rules block as defined below.'
            notification_rules.active_assignments: '- (Optional) A notification_target block as defined below to configure notfications on active role assignments.'
            notification_rules.eligible_activations: '- (Optional) A notification_target block as defined below for configuring notifications on activation of eligible role.'
            notification_rules.eligible_assignments: '- (Optional) A notification_target block as defined below to configure notification on eligible role assignments.'
            notification_settings.additional_recipients: '- (Optional) A list of additional email addresses that will receive these notifications.'
            notification_settings.default_recipients: '- (Required) Should the default recipients receive these notifications.'
            notification_settings.notification_level: '- (Required) What level of notifications should be sent. Options are All or Critical.'
            notification_target.admin_notifications: '- (Optional) A notification_settings block as defined above.'
            notification_target.approver_notifications: '- (Optional) A notification_settings block as defined above.'
            notification_target.assignee_notifications: '- (Optional) A notification_settings block as defined above.'
            primary_approver.object_id: '- (Required) The ID of the object which will act as an approver.'
            primary_approver.type: '- (Required) The type of object acting as an approver. Possible options are singleUser and groupMembers.'
            role_id: '- (Required) The type of assignment this policy coveres. Can be either member or owner.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements: []
    azuread_invitation:
        subCategory: Invitations
        name: azuread_invitation
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "redirect_url": "https://portal.azure.com",
                  "user_email_address": "jdoe@hashicorp.com"
                }
            - name: example
              manifest: |-
                {
                  "message": [
                    {
                      "language": "en-US"
                    }
                  ],
                  "redirect_url": "https://portal.azure.com",
                  "user_email_address": "jdoe@hashicorp.com"
                }
            - name: example
              manifest: |-
                {
                  "message": [
                    {
                      "additional_recipients": [
                        "aaliceberg@hashicorp.com"
                      ],
                      "body": "Hello there! You are invited to join my Azure tenant!"
                    }
                  ],
                  "redirect_url": "https://portal.azure.com",
                  "user_display_name": "Bob Bobson",
                  "user_email_address": "bbobson@hashicorp.com"
                }
        argumentDocs:
            message: '- (Optional) A message block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.'
            message.additional_recipients: '- (Optional) Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.'
            message.body: '- (Optional) Customized message body you want to send if you don''t want to send the default message. Cannot be specified with language.'
            message.language: '- (Optional) The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to en-US. Cannot be specified with body.'
            redeem_url: '- The URL the user can use to redeem their invitation.'
            redirect_url: '- (Required) The URL that the user should be redirected to once the invitation is redeemed.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            user_display_name: '- (Optional) The display name of the user being invited.'
            user_email_address: '- (Required) The email address of the user being invited.'
            user_id: '- Object ID of the invited user.'
            user_type: '- (Optional) The user type of the user being invited. Must be one of Guest or Member. Only Global Administrators can invite users as members. Defaults to Guest.'
        importStatements: []
    azuread_named_location:
        subCategory: Conditional Access
        name: azuread_named_location
        title: ""
        examples:
            - name: example-ip
              manifest: |-
                {
                  "display_name": "IP Named Location",
                  "ip": [
                    {
                      "ip_ranges": [
                        "1.1.1.1/32",
                        "2.2.2.2/32"
                      ],
                      "trusted": true
                    }
                  ]
                }
            - name: example-country
              manifest: |-
                {
                  "country": [
                    {
                      "countries_and_regions": [
                        "GB",
                        "US"
                      ],
                      "include_unknown_countries_and_regions": false
                    }
                  ],
                  "display_name": "Country Named Location"
                }
        argumentDocs:
            country: '- (Optional) A country block as documented below, which configures a country-based named location.'
            country.countries_and_regions: '- (Required) List of countries and/or regions in two-letter format specified by ISO 3166-2.'
            country.include_unknown_countries_and_regions: '- (Optional) Whether IP addresses that don''t map to a country or region should be included in the named location. Defaults to false.'
            display_name: '- (Required) The friendly name for this named location.'
            id: '- The ID of the named location.'
            ip: '- (Optional) An ip block as documented below, which configures an IP-based named location.'
            ip.ip_ranges: '- (Required) List of IP address ranges in IPv4 CIDR format (e.g. 1.2.3.4/32) or any allowable IPv6 format from IETF RFC596. Each CIDR prefix must be /8 or larger.'
            ip.trusted: '- (Optional) Whether the named location is trusted. Defaults to false.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_named_location.my_location 00000000-0000-0000-0000-000000000000
    azuread_privileged_access_group_assignment_schedule:
        subCategory: Identity Governance
        name: azuread_privileged_access_group_assignment_schedule
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "assignment_type": "member",
                  "duration": "P30D",
                  "group_id": "${azuread_group.pim.id}",
                  "justification": "as requested",
                  "principal_id": "${azuread_user.member.id}"
                }
              references:
                group_id: azuread_group.pim.id
                principal_id: azuread_user.member.id
              dependencies:
                azuread_group.example: |-
                    {
                      "display_name": "group-name",
                      "security_enabled": true
                    }
                azuread_user.member: |-
                    {
                      "display_name": "J. Doe",
                      "mail_nickname": "jdoe",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "jdoe@hashicorp.com"
                    }
        argumentDocs:
            assignment_type: (Required) The type of assignment to the group. Can be either member or owner.
            duration: (Optional) The duration that this assignment is valid for, formatted as an ISO8601 duration (e.g. P30D for 30 days, PT3H for three hours).
            expiration_date: (Optional) The date that this assignment expires, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z).
            group_id: (Required) The Object ID of the Azure AD group to which the principal will be assigned.
            id: '- (String) The ID of this request.'
            justification: (Optional) The justification for this assignment. May be required by the role policy.
            permanent_assignment: (Optional) Is this assigment permanently valid.
            principal_id: (Required) The Object ID of the principal to be assigned to the above group. Can be either a user or a group.
            start_date: (Optional) The date from which this assignment is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If not provided, the assignment is immediately valid.
            status: '- (String) The provisioning status of this request.'
            target_schedule_id: '- (String) The ID of this schedule created by this request.'
            ticket_number: (Optional) The ticket number in the ticket system approving this assignment. May be required by the role policy.
            ticket_system: (Optional) The ticket system containing the ticket number approving this assignment. May be required by the role policy.
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_privileged_access_group_assignment_schedule.example 00000000-0000-0000-0000-000000000000_member_00000000-0000-0000-0000-000000000000
    azuread_privileged_access_group_eligibility_schedule:
        subCategory: Identity Governance
        name: azuread_privileged_access_group_eligibility_schedule
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "assignment_type": "member",
                  "duration": "P30D",
                  "group_id": "${azuread_group.pim.id}",
                  "justification": "as requested",
                  "principal_id": "${azuread_user.member.id}"
                }
              references:
                group_id: azuread_group.pim.id
                principal_id: azuread_user.member.id
              dependencies:
                azuread_group.example: |-
                    {
                      "display_name": "group-name",
                      "security_enabled": true
                    }
                azuread_user.member: |-
                    {
                      "display_name": "J. Doe",
                      "mail_nickname": "jdoe",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "jdoe@hashicorp.com"
                    }
        argumentDocs:
            assignment_type: (Required) The type of assignment to the group. Can be either member or owner.
            duration: (Optional) The duration that this assignment is valid for, formatted as an ISO8601 duration (e.g. P30D for 30 days, PT3H for three hours).
            expiration_date: (Optional) The date that this assignment expires, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z).
            group_id: (Required) The Object ID of the Azure AD group to which the principal will be assigned.
            id: '- (String) The ID of this request.'
            justification: (Optional) The justification for this assignment. May be required by the role policy.
            permanent_assignment: (Optional) Is this assigment permanently valid.
            principal_id: (Required) The Object ID of the principal to be assigned to the above group. Can be either a user or a group.
            start_date: (Optional) The date from which this assignment is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If not provided, the assignment is immediately valid.
            status: '- (String) The provisioning status of this request.'
            target_schedule_id: '- (String) The ID of this schedule created by this request.'
            ticket_number: (Optional) The ticket number in the ticket system approving this assignment. May be required by the role policy.
            ticket_system: (Optional) The ticket system containing the ticket number approving this assignment. May be required by the role policy.
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_privileged_access_group_eligibility_schedule.example 00000000-0000-0000-0000-000000000000_member_00000000-0000-0000-0000-000000000000
    azuread_service_principal:
        subCategory: Service Principals
        name: azuread_service_principal
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "app_role_assignment_required": false,
                  "client_id": "${azuread_application.example.client_id}",
                  "owners": [
                    "${data.azuread_client_config.current.object_id}"
                  ]
                }
              references:
                client_id: azuread_application.example.client_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "owners": [
                        "${data.azuread_client_config.current.object_id}"
                      ]
                    }
            - name: example
              manifest: |-
                {
                  "app_role_assignment_required": false,
                  "client_id": "${azuread_application.example.client_id}",
                  "feature_tags": [
                    {
                      "enterprise": true,
                      "gallery": true
                    }
                  ],
                  "owners": [
                    "${data.azuread_client_config.current.object_id}"
                  ]
                }
              references:
                client_id: azuread_application.example.client_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "owners": [
                        "${data.azuread_client_config.current.object_id}"
                      ]
                    }
            - name: msgraph
              manifest: |-
                {
                  "client_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}",
                  "use_existing": true
                }
              references:
                client_id: data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph
            - name: example
              manifest: |-
                {
                  "client_id": "${azuread_application.example.client_id}",
                  "use_existing": true
                }
              references:
                client_id: azuread_application.example.client_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "template_id": "${data.azuread_application_template.example.template_id}"
                    }
        argumentDocs:
            account_enabled: '- (Optional) Whether or not the service principal account is enabled. Defaults to true.'
            admin_consent_description: '- Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users.'
            admin_consent_display_name: '- Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users.'
            allowed_member_types: '- Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are: User and Application, or both.'
            alternative_names: '- (Optional) A set of alternative names, used to retrieve service principals by subscription, identify resource group and full resource ids for managed identities.'
            app_role_assignment_required: '- (Optional) Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application. Defaults to false.'
            app_role_ids: '- A mapping of app role values to app role IDs, as published by the associated application, intended to be useful when referencing app roles in other resources in your configuration.'
            app_roles: '- A list of app roles published by the associated application, as documented below. For more information official documentation.'
            application_tenant_id: '- The tenant ID where the associated application is registered.'
            client_id: '- (Required) The client ID of the application for which to create a service principal.'
            description: '- (Optional) A description of the service principal provided for internal end-users.'
            display_name: '- The display name of the application associated with this service principal.'
            enabled: '- Determines if the app role is enabled.'
            feature_tags: '- (Optional) A feature_tags block as described below. Cannot be used together with the tags property.'
            feature_tags.custom_single_sign_on: '- (Optional) Whether this service principal represents a custom SAML application. Enabling this will assign the WindowsAzureActiveDirectoryCustomSingleSignOnApplication tag. Defaults to false.'
            feature_tags.enterprise: '- (Optional) Whether this service principal represents an Enterprise Application. Enabling this will assign the WindowsAzureActiveDirectoryIntegratedApp tag. Defaults to false.'
            feature_tags.gallery: '- (Optional) Whether this service principal represents a gallery application. Enabling this will assign the WindowsAzureActiveDirectoryGalleryApplicationNonPrimaryV1 tag. Defaults to false.'
            feature_tags.hide: '- (Optional) Whether this app is invisible to users in My Apps and Office 365 Launcher. Enabling this will assign the HideApp tag. Defaults to false.'
            feature_tags.relay_state: '- (Optional) The relative URI the service provider would redirect to after completion of the single sign-on flow.'
            homepage_url: '- Home page or landing page of the associated application.'
            id: '- The unique identifier of the app_role.'
            login_url: '- (Optional) The URL where the service provider redirects the user to Azure AD to authenticate. Azure AD uses the URL to launch the application from Microsoft 365 or the Azure AD My Apps. When blank, Azure AD performs IdP-initiated sign-on for applications configured with SAML-based single sign-on.'
            logout_url: '- The URL that will be used by Microsoft''s authorization service to log out an user using OpenId Connect front-channel, back-channel or SAML logout protocols, taken from the associated application.'
            notes: '- (Optional) A free text field to capture information about the service principal, typically used for operational purposes.'
            notification_email_addresses: '- (Optional) A set of email addresses where Azure AD sends a notification when the active certificate is near the expiration date. This is only for the certificates used to sign the SAML token issued for Azure AD Gallery applications.'
            oauth2_permission_scope_ids: '- A mapping of OAuth2.0 permission scope values to scope IDs, as exposed by the associated application, intended to be useful when referencing permission scopes in other resources in your configuration.'
            oauth2_permission_scopes: '- A list of OAuth 2.0 delegated permission scopes exposed by the associated application, as documented below.'
            object_id: '- The object ID of the service principal.'
            owners: '- (Optional) A set of object IDs of principals that will be granted ownership of the service principal. Supported object types are users or service principals. By default, no owners are assigned.'
            preferred_single_sign_on_mode: '- (Optional) The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps. Supported values are oidc, password, saml or notSupported. Omit this property or specify a blank string to unset.'
            redirect_uris: '- A list of URLs where user tokens are sent for sign-in with the associated application, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent for the associated application.'
            saml_metadata_url: '- The URL where the service exposes SAML metadata for federation.'
            saml_single_sign_on: '- (Optional) A saml_single_sign_on block as documented below.'
            service_principal_names: '- A list of identifier URI(s), copied over from the associated application.'
            sign_in_audience: '- The Microsoft account types that are supported for the associated application. Possible values include AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount or PersonalMicrosoftAccount.'
            tags: '- (Optional) A set of tags to apply to the service principal for configuring specific behaviours of the service principal. Note that these are not provided for use by practitioners. Cannot be used together with the feature_tags block.'
            tags.use_existing: '- (Optional) When true, any existing service principal linked to the same application will be automatically imported. When false, an import error will be raised for any pre-existing service principal.'
            timeouts.create: '- (Defaults to 10 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 10 minutes) Used when updating the resource.'
            type: '- Identifies whether the service principal represents an application or a managed identity. Possible values include Application or ManagedIdentity.'
            user_consent_description: '- Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf.'
            user_consent_display_name: '- Display name for the delegated permission that appears in the end user consent experience.'
            value: '- The value that is used for the roles claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.'
        importStatements:
            - terraform import azuread_service_principal.example 00000000-0000-0000-0000-000000000000
    azuread_service_principal_certificate:
        subCategory: Service Principals
        name: azuread_service_principal_certificate
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "end_date": "2021-05-01T01:02:03Z",
                  "service_principal_id": "${azuread_service_principal.example.id}",
                  "type": "AsymmetricX509Cert",
                  "value": "${file(\"cert.pem\")}"
                }
              references:
                service_principal_id: azuread_service_principal.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example"
                    }
                azuread_service_principal.example: |-
                    {
                      "application_id": "${azuread_application.example.application_id}"
                    }
            - name: example
              manifest: |-
                {
                  "encoding": "base64",
                  "end_date": "2021-05-01T01:02:03Z",
                  "service_principal_id": "${azuread_service_principal.example.id}",
                  "type": "AsymmetricX509Cert",
                  "value": "${base64encode(file(\"cert.der\"))}"
                }
              references:
                service_principal_id: azuread_service_principal.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example"
                    }
                azuread_service_principal.example: |-
                    {
                      "application_id": "${azuread_application.example.application_id}"
                    }
        argumentDocs:
            encoding: '- (Optional) Specifies the encoding used for the supplied certificate data. Must be one of pem, base64 or hex. Defaults to pem.'
            end_date: '- (Optional) The end date until which the certificate is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). Changing this field forces a new resource to be created.'
            end_date_relative: '- (Optional) A relative duration for which the certificate is valid until, for example 240h (10 days) or 2400h30m. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h". Changing this field forces a new resource to be created.'
            key_id: '- (Optional) A UUID used to uniquely identify this certificate. If not specified a UUID will be automatically generated. Changing this field forces a new resource to be created.'
            service_principal_id: '- (Required) The object ID of the service principal for which this certificate should be created. Changing this field forces a new resource to be created.'
            start_date: '- (Optional) The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If this isn''t specified, the value is determined by Azure Active Directory and is usually the start date of the certificate for asymmetric keys, or the current timestamp for symmetric keys. Changing this field forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            type: '- (Required) The type of key/certificate. Must be one of AsymmetricX509Cert or Symmetric. Changing this fields forces a new resource to be created.'
            value: '- (Required) The certificate data, which can be PEM encoded, base64 encoded DER or hexadecimal encoded DER. See also the encoding argument.'
        importStatements:
            - terraform import azuread_service_principal_certificate.example 00000000-0000-0000-0000-000000000000/certificate/11111111-1111-1111-1111-111111111111
    azuread_service_principal_claims_mapping_policy_assignment:
        subCategory: Service Principals
        name: azuread_service_principal_claims_mapping_policy_assignment
        title: ""
        examples:
            - name: app
              manifest: |-
                {
                  "claims_mapping_policy_id": "${azuread_claims_mapping_policy.my_policy.id}",
                  "service_principal_id": "${azuread_service_principal.my_principal.id}"
                }
              references:
                claims_mapping_policy_id: azuread_claims_mapping_policy.my_policy.id
                service_principal_id: azuread_service_principal.my_principal.id
        argumentDocs:
            claims_mapping_policy_id: '- (Required) The ID of the claims mapping policy to assign.'
            id: '- The ID of the Claims Mapping Policy Assignment.'
            service_principal_id: '- (Required) The object ID of the service principal for the policy assignment.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
        importStatements:
            - terraform import azuread_service_principal_claims_mapping_policy_assignment.app 00000000-0000-0000-0000-000000000000/claimsMappingPolicy/11111111-0000-0000-0000-000000000000
    azuread_service_principal_delegated_permission_grant:
        subCategory: Delegated Permission Grants
        name: azuread_service_principal_delegated_permission_grant
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "claim_values": [
                    "openid",
                    "User.Read.All"
                  ],
                  "resource_service_principal_object_id": "${azuread_service_principal.msgraph.object_id}",
                  "service_principal_object_id": "${azuread_service_principal.example.object_id}"
                }
              references:
                resource_service_principal_object_id: azuread_service_principal.msgraph.object_id
                service_principal_object_id: azuread_service_principal.example.object_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"openid\"]}",
                              "type": "Scope"
                            },
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.Read\"]}",
                              "type": "Scope"
                            }
                          ],
                          "resource_app_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}"
                        }
                      ]
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}"
                    }
                azuread_service_principal.msgraph: |-
                    {
                      "client_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}",
                      "use_existing": true
                    }
            - name: example
              manifest: |-
                {
                  "claim_values": [
                    "openid",
                    "User.Read.All"
                  ],
                  "resource_service_principal_object_id": "${azuread_service_principal.msgraph.object_id}",
                  "service_principal_object_id": "${azuread_service_principal.example.object_id}",
                  "user_object_id": "${azuread_user.example.object_id}"
                }
              references:
                resource_service_principal_object_id: azuread_service_principal.msgraph.object_id
                service_principal_object_id: azuread_service_principal.example.object_id
                user_object_id: azuread_user.example.object_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"openid\"]}",
                              "type": "Scope"
                            },
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.Read\"]}",
                              "type": "Scope"
                            }
                          ],
                          "resource_app_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}"
                        }
                      ]
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}"
                    }
                azuread_service_principal.msgraph: |-
                    {
                      "client_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}",
                      "use_existing": true
                    }
                azuread_user.example: |-
                    {
                      "display_name": "J. Doe",
                      "mail_nickname": "jdoe",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "jdoe@hashicorp.com"
                    }
        argumentDocs:
            claim_values: '- (Required) - A set of claim values for delegated permission scopes which should be included in access tokens for the resource.'
            id: '- The ID of the delegated permission grant.'
            resource_service_principal_object_id: '- (Required) The object ID of the service principal representing the resource to be accessed. Changing this forces a new resource to be created.'
            service_principal_object_id: '- (Required) The object ID of the service principal for which this delegated permission grant should be created. Changing this forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
            user_object_id: '- (Optional) - The object ID of the user on behalf of whom the service principal is authorized to access the resource. When omitted, the delegated permission grant will be consented for all users. Changing this forces a new resource to be created.'
        importStatements:
            - terraform import azuread_service_principal_delegated_permission_grant.example aaBBcDDeFG6h5JKLMN2PQrrssTTUUvWWxxxxxyyyzzz
    azuread_service_principal_password:
        subCategory: Service Principals
        name: azuread_service_principal_password
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "service_principal_id": "${azuread_service_principal.example.object_id}"
                }
              references:
                service_principal_id: azuread_service_principal.example.object_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example"
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.client_id}"
                    }
            - name: example
              manifest: |-
                {
                  "rotate_when_changed": {
                    "rotation": "${time_rotating.example.id}"
                  },
                  "service_principal_id": "${azuread_service_principal.example.object_id}"
                }
              references:
                service_principal_id: azuread_service_principal.example.object_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example"
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.client_id}"
                    }
                time_rotating.example: |-
                    {
                      "rotation_days": 7
                    }
        argumentDocs:
            display_name: '- (Optional) A display name for the password.'
            end_date: '- (Optional) The end date until which the password is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). Changing this field forces a new resource to be created.'
            end_date_relative: '- (Optional) A relative duration for which the password is valid until, for example 240h (10 days) or 2400h30m. Changing this field forces a new resource to be created.'
            key_id: '- A UUID used to uniquely identify this password credential.'
            rotate_when_changed: '- (Optional) A map of arbitrary key/value pairs that will force recreation of the password when they change, enabling password rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.'
            service_principal_id: '- (Required) The object ID of the service principal for which this password should be created. Changing this field forces a new resource to be created.'
            start_date: '- (Optional) The start date from which the password is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). If this isn''t specified, the current date is used.  Changing this field forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            value: '- The password for this service principal, which is generated by Azure Active Directory.'
        importStatements: []
    azuread_service_principal_token_signing_certificate:
        subCategory: Service Principals
        name: azuread_service_principal_token_signing_certificate
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "service_principal_id": "${azuread_service_principal.example.id}"
                }
              references:
                service_principal_id: azuread_service_principal.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example"
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}"
                    }
            - name: example
              manifest: |-
                {
                  "display_name": "CN=example.com",
                  "end_date": "2023-05-01T01:02:03Z",
                  "service_principal_id": "${azuread_service_principal.example.id}"
                }
              references:
                service_principal_id: azuread_service_principal.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example"
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}"
                    }
        argumentDocs:
            display_name: '- (Optional) Specifies a friendly name for the certificate. Must start with CN=. Changing this field forces a new resource to be created.'
            end_date: '- (Optional) The end date until which the token signing certificate is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z). Changing this field forces a new resource to be created.'
            key_id: '- A UUID used to uniquely identify the verify certificate.'
            service_principal_id: '- (Required) The object ID of the service principal for which this certificate should be created. Changing this field forces a new resource to be created.'
            start_date: '- The start date from which the certificate is valid, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z).'
            thumbprint: '- A SHA-1 generated thumbprint of the token signing certificate, which can be used to set the preferred signing certificate for a service principal.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            value: '- The certificate data, which is PEM encoded but does not include the header -----BEGIN CERTIFICATE-----\n or the footer \n-----END CERTIFICATE-----.'
        importStatements:
            - terraform import azuread_service_principal_token_signing_certificate.example 00000000-0000-0000-0000-000000000000/tokenSigningCertificate/11111111-1111-1111-1111-111111111111
    azuread_synchronization_job:
        subCategory: Synchronization
        name: azuread_synchronization_job
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": true,
                  "service_principal_id": "${azuread_service_principal.example.id}",
                  "template_id": "dataBricks"
                }
              references:
                service_principal_id: azuread_service_principal.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "feature_tags": [
                        {
                          "enterprise": true,
                          "gallery": true
                        }
                      ],
                      "template_id": "${data.azuread_application_template.example.template_id}"
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}",
                      "use_existing": true
                    }
                azuread_synchronization_secret.example: |-
                    {
                      "credential": [
                        {
                          "key": "BaseAddress",
                          "value": "https://adb-example.azuredatabricks.net/api/2.0/preview/scim"
                        },
                        {
                          "key": "SecretToken",
                          "value": "some-token"
                        }
                      ],
                      "service_principal_id": "${azuread_service_principal.example.id}"
                    }
        argumentDocs:
            enabled: '- (Optional) Whether or not the provisioning job is enabled. Default state is true.'
            id: '- An ID used to uniquely identify this synchronization job.'
            schedule: '- A schedule list as documented below.'
            schedule.expiration: '- Date and time when this job will expire, formatted as an RFC3339 date string (e.g. 2018-01-01T01:02:03Z).'
            schedule.interval: '- The interval between synchronization iterations ISO8601. E.g. PT40M run every 40 minutes.'
            schedule.state: '- State of the job.'
            service_principal_id: '- (Required) The object ID of the service principal for which this synchronization job should be created. Changing this field forces a new resource to be created.'
            template_id: '- (Required) Identifier of the synchronization template this job is based on.'
            timeouts.create: '- (Defaults to 15 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_synchronization_job.example 00000000-0000-0000-0000-000000000000/job/dataBricks.f5532fc709734b1a90e8a1fa9fd03a82.8442fd39-2183-419c-8732-74b6ce866bd5
    azuread_synchronization_job_provision_on_demand:
        subCategory: Synchronization
        name: azuread_synchronization_job_provision_on_demand
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "parameter": [
                    {
                      "rule_id": "",
                      "subject": [
                        {
                          "object_id": "${azuread_group.example.object_id}",
                          "object_type_name": "Group"
                        }
                      ]
                    }
                  ],
                  "service_principal_id": "${azuread_service_principal.example.id}",
                  "synchronization_job_id": "${azuread_synchronization_job.example.id}"
                }
              references:
                parameter.subject.object_id: azuread_group.example.object_id
                service_principal_id: azuread_service_principal.example.id
                synchronization_job_id: azuread_synchronization_job.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "feature_tags": [
                        {
                          "enterprise": true,
                          "gallery": true
                        }
                      ],
                      "template_id": "${data.azuread_application_template.example.template_id}"
                    }
                azuread_group.example: |-
                    {
                      "display_name": "example",
                      "owners": [
                        "${data.azuread_client_config.current.object_id}"
                      ],
                      "security_enabled": true
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.client_id}",
                      "use_existing": true
                    }
                azuread_synchronization_job.example: |-
                    {
                      "enabled": true,
                      "service_principal_id": "${azuread_service_principal.example.id}",
                      "template_id": "dataBricks"
                    }
                azuread_synchronization_secret.example: |-
                    {
                      "credential": [
                        {
                          "key": "BaseAddress",
                          "value": "https://adb-example.azuredatabricks.net/api/2.0/preview/scim"
                        },
                        {
                          "key": "SecretToken",
                          "value": "some-token"
                        }
                      ],
                      "service_principal_id": "${azuread_service_principal.example.id}"
                    }
        argumentDocs:
            parameter: (Required) One or more parameter blocks as documented below.
            parameter.rule_id: (Required) The identifier of the synchronization rule to be applied. This rule ID is defined in the schema for a given synchronization job or template.
            parameter.subject: (Required) One or more subject blocks as documented below.
            parameter.subject.object_id: '(String) The identifier of an object to which a synchronization job is to be applied. Can be one of the following: (1) An onPremisesDistinguishedName for synchronization from Active Directory to Azure AD. (2) The user ID for synchronization from Azure AD to a third-party. (3) The Worker ID of the Workday worker for synchronization from Workday to either Active Directory or Azure AD.'
            parameter.subject.object_type_name: '(String) The type of the object to which a synchronization job is to be applied. Can be one of the following: user for synchronizing between Active Directory and Azure AD, User for synchronizing a user between Azure AD and a third-party application, Worker for synchronization a user between Workday and either Active Directory or Azure AD, Group for synchronizing a group between Azure AD and a third-party application.'
            service_principal_id: (Required) The object ID of the service principal for the synchronization job.
            synchronization_job_id: (Required) Identifier of the synchronization template this job is based on.
            timeouts.create: '- (Defaults to 15 minutes) Used when creating the resource.'
            triggers: (Optional) Map of arbitrary keys and values that, when changed, will trigger a re-invocation. To force a re-invocation without changing these keys/values, use the terraform taint command.
        importStatements: []
    azuread_synchronization_secret:
        subCategory: Synchronization
        name: azuread_synchronization_secret
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "credential": [
                    {
                      "key": "BaseAddress",
                      "value": "abc"
                    },
                    {
                      "key": "SecretToken",
                      "value": "some-token"
                    }
                  ],
                  "service_principal_id": "${azuread_service_principal.example.id}"
                }
              references:
                service_principal_id: azuread_service_principal.example.id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "feature_tags": [
                        {
                          "enterprise": true,
                          "gallery": true
                        }
                      ],
                      "template_id": "${data.azuread_application_template.example.template_id}"
                    }
                azuread_service_principal.example: |-
                    {
                      "client_id": "${azuread_application.example.application_id}",
                      "use_existing": true
                    }
        argumentDocs:
            credential: '- (Optional) One or more credential blocks as documented below.'
            credential.key: '- (Required) The key of the secret.'
            credential.value: '- (Required) The value of the secret.'
            id: '- An ID used to uniquely identify this synchronization sec.'
            service_principal_id: '- (Required) The object ID of the service principal for which this synchronization secrets should be stored. Changing this field forces a new resource to be created.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements: []
    azuread_user:
        subCategory: Users
        name: azuread_user
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "J. Doe",
                  "mail_nickname": "jdoe",
                  "password": "SecretP@sswd99!",
                  "user_principal_name": "jdoe@hashicorp.com"
                }
        argumentDocs:
            account_enabled: '- (Optional) Whether or not the account should be enabled.'
            age_group: '- (Optional) The age group of the user. Supported values are Adult, NotAdult and Minor. Omit this property or specify a blank string to unset.'
            business_phones: '- (Optional) A list of telephone numbers for the user. Only one number can be set for this property. Read-only for users synced with Azure AD Connect.'
            city: '- (Optional) The city in which the user is located.'
            company_name: '- (Optional) The company name which the user is associated. This property can be useful for describing the company that an external user comes from.'
            consent_provided_for_minor: '- (Optional) Whether consent has been obtained for minors. Supported values are Granted, Denied and NotRequired. Omit this property or specify a blank string to unset.'
            cost_center: '- (Optional) The cost center associated with the user.'
            country: '- (Optional) The country/region in which the user is located. Examples include: NO, JP, and GB.'
            creation_type: '- Indicates whether the user account was created as a regular school or work account (null), an external account (Invitation), a local account for an Azure Active Directory B2C tenant (LocalAccount) or self-service sign-up using email verification (EmailVerified).'
            department: '- (Optional) The name for the department in which the user works.'
            disable_password_expiration: '- (Optional) Whether the user''s password is exempt from expiring. Defaults to false.'
            disable_strong_password: '- (Optional) Whether the user is allowed weaker passwords than the default policy to be specified. Defaults to false.'
            display_name: '- (Required) The name to display in the address book for the user.'
            division: '- (Optional) The name of the division in which the user works.'
            employee_id: '- (Optional) The employee identifier assigned to the user by the organisation.'
            employee_type: '- (Optional) Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor.'
            external_user_state: '- For an external user invited to the tenant, this property represents the invited user''s invitation status. Possible values are PendingAcceptance or Accepted.'
            fax_number: '- (Optional) The fax number of the user.'
            force_password_change: '- (Optional) Whether the user is forced to change the password during the next sign-in. Only takes effect when also changing the password. Defaults to false.'
            given_name: '- (Optional) The given name (first name) of the user.'
            im_addresses: '- A list of instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user.'
            job_title: '- (Optional) The user’s job title.'
            mail: '- (Optional) The SMTP address for the user. This property cannot be unset once specified.'
            mail_nickname: '- (Optional) The mail alias for the user. Defaults to the user name part of the user principal name (UPN).'
            manager_id: '- (Optional) The object ID of the user''s manager.'
            mobile_phone: '- (Optional) The primary cellular telephone number for the user.'
            object_id: '- The object ID of the user.'
            office_location: '- (Optional) The office location in the user''s place of business.'
            onpremises_distinguished_name: '- The on-premises distinguished name (DN) of the user, synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_domain_name: '- The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_immutable_id: '- (Optional) The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user''s user_principal_name property when creating a new user account.'
            onpremises_sam_account_name: '- The on-premise SAM account name of the user.'
            onpremises_security_identifier: '- The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_sync_enabled: '- Whether this user is synchronised from an on-premises directory (true), no longer synchronised (false), or has never been synchronised (null).'
            onpremises_user_principal_name: '- The on-premise user principal name of the user.'
            other_mails: '- (Optional) A list of additional email addresses for the user.'
            password: '- (Optional) The password for the user. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters. This property is required when creating a new user.'
            postal_code: '- (Optional) The postal code for the user''s postal address. The postal code is specific to the user''s country/region. In the United States of America, this attribute contains the ZIP code.'
            preferred_language: '- (Optional) The user''s preferred language, in ISO 639-1 notation.'
            proxy_addresses: '- List of email addresses for the user that direct to the same mailbox.'
            show_in_address_list: '- (Optional) Whether or not the Outlook global address list should include this user. Defaults to true.'
            state: '- (Optional) The state or province in the user''s address.'
            street_address: '- (Optional) The street address of the user''s place of business.'
            surname: '- (Optional) The user''s surname (family name or last name).'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
            usage_location: '- (Optional) The usage location of the user. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: NO, JP, and GB. Cannot be reset to null once set.'
            user_principal_name: '- (Required) The user principal name (UPN) of the user.'
            user_type: '- The user type in the directory. Possible values are Guest or Member.'
        importStatements:
            - terraform import azuread_user.my_user 00000000-0000-0000-0000-000000000000
    azuread_user_flow_attribute:
        subCategory: User Flows
        name: azuread_user_flow_attribute
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "data_type": "string",
                  "description": "Your hobby",
                  "display_name": "Hobby"
                }
        argumentDocs:
            attribute_type: '- The type of the user flow attribute. Values include builtIn, custom or required.'
            data_type: '- (Required) The data type of the user flow attribute. Possible values are boolean, dateTime, int64, string or stringCollection. Changing this forces a new resource to be created.'
            description: '- (Required) The description of the user flow attribute that is shown to the user at the time of sign-up.'
            display_name: '- (Required) The display name of the user flow attribute. Changing this forces a new resource to be created.'
            id: '- An ID used to uniquely identify this user flow attribute.'
            timeouts.create: '- (Defaults to 5 minutes) Used when creating the resource.'
            timeouts.delete: '- (Defaults to 5 minutes) Used when deleting the resource.'
            timeouts.read: '- (Defaults to 5 minutes) Used when retrieving the resource.'
            timeouts.update: '- (Defaults to 5 minutes) Used when updating the resource.'
        importStatements:
            - terraform import azuread_user_flow_attribute.example extension_ecc9f88db2924942b8a96f44873616fe_Hobbyjkorv
