name: hashicorp/azuread
resources:
    azuread_administrative_unit:
        subCategory: Administrative Units
        name: azuread_administrative_unit
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "Example-AU"
                }
              dependencies:
                azuread_administrative_unit_member.example: |-
                    {
                      "administrative_unit_object_id": "${azuread_administrative_unit.example.id}",
                      "member_object_id": "${data.azuread_user.example.id}"
                    }
        argumentDocs:
            administrative_unit_object_id: '- (Required) The object ID of the administrative unit you want to add the member to. Changing this forces a new resource to be created.'
            member_object_id: '- (Required) The object ID of the user or group you want to add as a member of the administrative unit. Changing this forces a new resource to be created.'
        importStatements:
            - terraform import azuread_administrative_unit_member.test 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111
    azuread_application:
        subCategory: Synchronization
        name: azuread_application
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "example",
                  "feature_tags": [
                    {
                      "enterprise": true,
                      "gallery": true
                    }
                  ],
                  "template_id": "${data.azuread_application_template.example.template_id}"
                }
              references:
                template_id: data.azuread_application_template.example.template_id
              dependencies:
                azuread_service_principal.example: |-
                    {
                      "application_id": "${azuread_application.example.application_id}",
                      "use_existing": true
                    }
                azuread_synchronization_secret.example: |-
                    {
                      "credential": [
                        {
                          "key": "BaseAddress",
                          "value": "abc"
                        },
                        {
                          "key": "SecretToken",
                          "value": "some-token"
                        }
                      ],
                      "service_principal_id": "${azuread_service_principal.example.id}"
                    }
        argumentDocs:
            credential: '- (Optional) One or more credential blocks as documented below.'
            credential.key: '- (Required) The key of the secret.'
            credential.value: '- (Required) The value of the secret.'
            id: '- An ID used to uniquely identify this synchronization sec.'
            service_principal_id: '- (Required) The object ID of the service principal for which this synchronization secrets should be stored. Changing this field forces a new resource to be created.'
        importStatements: []
    azuread_claims_mapping_policy:
        subCategory: Policies
        name: azuread_claims_mapping_policy
        title: ""
        examples:
            - name: my_policy
              manifest: |-
                {
                  "definition": [
                    "${jsonencode(\n      {\n        ClaimsMappingPolicy = {\n          ClaimsSchema = [\n            {\n              ID            = \"employeeid\"\n              JwtClaimType  = \"name\"\n              SamlClaimType = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"\n              Source        = \"user\"\n            },\n            {\n              ID            = \"tenantcountry\"\n              JwtClaimType  = \"country\"\n              SamlClaimType = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country\"\n              Source        = \"company\"\n            }\n          ]\n          IncludeBasicClaimSet = \"true\"\n          Version              = 1\n        }\n      }\n    )}"
                  ],
                  "display_name": "My Policy"
                }
        argumentDocs:
            definition: '- (Required) The claims mapping policy. This is a JSON formatted string, for which the jsonencode() function can be used.'
            display_name: '- (Required) The display name for this Claims Mapping Policy.'
            id: '- The ID of the Claims Mapping Policy.'
        importStatements:
            - terraform import azuread_claims_mapping_policy.my_policy 00000000-0000-0000-0000-000000000000
    azuread_conditional_access_policy:
        subCategory: Conditional Access
        name: azuread_conditional_access_policy
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "conditions": [
                    {
                      "applications": [
                        {
                          "excluded_applications": [],
                          "included_applications": [
                            "All"
                          ]
                        }
                      ],
                      "client_app_types": [
                        "all"
                      ],
                      "devices": [
                        {
                          "filter": [
                            {
                              "mode": "exclude",
                              "rule": "device.operatingSystem eq \"Doors\""
                            }
                          ]
                        }
                      ],
                      "locations": [
                        {
                          "excluded_locations": [
                            "AllTrusted"
                          ],
                          "included_locations": [
                            "All"
                          ]
                        }
                      ],
                      "platforms": [
                        {
                          "excluded_platforms": [
                            "iOS"
                          ],
                          "included_platforms": [
                            "android"
                          ]
                        }
                      ],
                      "sign_in_risk_levels": [
                        "medium"
                      ],
                      "user_risk_levels": [
                        "medium"
                      ],
                      "users": [
                        {
                          "excluded_users": [
                            "GuestsOrExternalUsers"
                          ],
                          "included_users": [
                            "All"
                          ]
                        }
                      ]
                    }
                  ],
                  "display_name": "example policy",
                  "grant_controls": [
                    {
                      "built_in_controls": [
                        "mfa"
                      ],
                      "operator": "OR"
                    }
                  ],
                  "session_controls": [
                    {
                      "application_enforced_restrictions_enabled": true,
                      "cloud_app_security_policy": "monitorOnly",
                      "sign_in_frequency": 10,
                      "sign_in_frequency_period": "hours"
                    }
                  ],
                  "state": "disabled"
                }
        argumentDocs:
            conditions: '- (Required) A conditions block as documented below, which specifies the rules that must be met for the policy to apply.'
            conditions.applications: '- (Required) An applications block as documented below, which specifies applications and user actions included in and excluded from the policy.'
            conditions.applications.excluded_applications: '- (Optional) A list of application IDs explicitly excluded from the policy. Can also be set to Office365.'
            conditions.applications.included_applications: '- (Optional) A list of application IDs the policy applies to, unless explicitly excluded (in excluded_applications). Can also be set to All, None or Office365. Cannot be specified with included_user_actions. One of included_applications or included_user_actions must be specified.'
            conditions.applications.included_user_actions: '- (Optional) A list of user actions to include. Supported values are urn:user:registerdevice and urn:user:registersecurityinfo. Cannot be specified with included_applications. One of included_applications or included_user_actions must be specified.'
            conditions.client_app_types: '- (Required) A list of client application types included in the policy. Possible values are: all, browser, mobileAppsAndDesktopClients, exchangeActiveSync, easSupported and other.'
            conditions.devices: '- (Optional) A devices block as documented below, which describes devices to be included in and excluded from the policy. A devices block can be added to an existing policy, but removing the devices block forces a new resource to be created.'
            conditions.locations: '- (Required) A locations block as documented below, which specifies locations included in and excluded from the policy.'
            conditions.platforms: '- (Required) A platforms block as documented below, which specifies platforms included in and excluded from the policy.'
            conditions.sign_in_risk_levels: '- (Optional) A list of sign-in risk levels included in the policy. Possible values are: low, medium, high, hidden, none, unknownFutureValue.'
            conditions.user_risk_levels: '- (Optional) A list of user risk levels included in the policy. Possible values are: low, medium, high, hidden, none, unknownFutureValue.'
            conditions.users: '- (Required) A users block as documented below, which specifies users, groups, and roles included in and excluded from the policy.'
            devices.filter: '- (Optional) A filter block as described below. A filter block can be added to an existing policy, but removing the filter block forces a new resource to be created.'
            devices.filter.mode: '- (Required) Whether to include in, or exclude from, matching devices from the policy. Supported values are include or exclude.'
            devices.filter.rule: '- (Required) Condition filter to match devices. For more information, see official documentation.'
            display_name: '- (Required) The friendly name for this Conditional Access Policy.'
            grant_controls: '- (Required) A grant_controls block as documented below, which specifies the grant controls that must be fulfilled to pass the policy.'
            grant_controls.built_in_controls: '- (Required) List of built-in controls required by the policy. Possible values are: block, mfa, approvedApplication, compliantApplication, compliantDevice, domainJoinedDevice, passwordChange or unknownFutureValue.'
            grant_controls.custom_authentication_factors: '- (Optional) List of custom controls IDs required by the policy.'
            grant_controls.operator: '- (Required) Defines the relationship of the grant controls. Possible values are: AND, OR.'
            grant_controls.terms_of_use: '- (Optional) List of terms of use IDs required by the policy.'
            id: '- The ID of the Conditional Access Policy.'
            locations.excluded_locations: '- (Optional) A list of location IDs excluded from scope of policy. Can also be set to AllTrusted.'
            locations.included_locations: '- (Required) A list of location IDs in scope of policy unless explicitly excluded. Can also be set to All, or AllTrusted.'
            platforms.excluded_platforms: '- (Optional) A list of platforms explicitly excluded from the policy. Possible values are: all, android, iOS, linux, macOS, windows, windowsPhone or unknownFutureValue.'
            platforms.included_platforms: '- (Required) A list of platforms the policy applies to, unless explicitly excluded. Possible values are: all, android, iOS, linux, macOS, windows, windowsPhone or unknownFutureValue.'
            session_controls: '- (Optional) A session_controls block as documented below, which specifies the session controls that are enforced after sign-in.'
            session_controls.application_enforced_restrictions_enabled: '- (Optional) Whether or not application enforced restrictions are enabled. Defaults to false.'
            session_controls.cloud_app_security_policy: '- (Optional) Enables cloud app security and specifies the cloud app security policy to use. Possible values are: blockDownloads, mcasConfigured, monitorOnly or unknownFutureValue.'
            session_controls.persistent_browser_mode: '- (Optional) Session control to define whether to persist cookies or not. Possible values are: always or never.'
            session_controls.sign_in_frequency: '- (Optional) Number of days or hours to enforce sign-in frequency. Required when sign_in_frequency_period is specified. Due to an API issue, removing this property forces a new resource to be created.'
            session_controls.sign_in_frequency_period: '- (Optional) The time period to enforce sign-in frequency. Possible values are: hours or days. Required when sign_in_frequency_period is specified. Due to an API issue, removing this property forces a new resource to be created.'
            state: '- (Required) Specifies the state of the policy object. Possible values are: enabled, disabled and enabledForReportingButNotEnforced'
            users.excluded_groups: '- (Optional) A list of group IDs excluded from scope of policy.'
            users.excluded_roles: '- (Optional) A list of role IDs excluded from scope of policy.'
            users.excluded_users: '- (Optional) A list of user IDs excluded from scope of policy and/or GuestsOrExternalUsers.'
            users.included_groups: '- (Optional) A list of group IDs in scope of policy unless explicitly excluded.'
            users.included_roles: '- (Optional) A list of role IDs in scope of policy unless explicitly excluded.'
            users.included_users: '- (Optional) A list of user IDs in scope of policy unless explicitly excluded, or None or All or GuestsOrExternalUsers.'
        importStatements:
            - terraform import azuread_conditional_access_policy.my_location 00000000-0000-0000-0000-000000000000
    azuread_custom_directory_role:
        subCategory: Directory Roles
        name: azuread_custom_directory_role
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "description": "Allows reading applications and updating groups",
                  "display_name": "My Custom Role",
                  "enabled": true,
                  "permissions": [
                    {
                      "allowed_resource_actions": [
                        "microsoft.directory/applications/basic/update",
                        "microsoft.directory/applications/create",
                        "microsoft.directory/applications/standard/read"
                      ]
                    },
                    {
                      "allowed_resource_actions": [
                        "microsoft.directory/groups/allProperties/read",
                        "microsoft.directory/groups/allProperties/read",
                        "microsoft.directory/groups/basic/update",
                        "microsoft.directory/groups/create",
                        "microsoft.directory/groups/delete"
                      ]
                    }
                  ],
                  "version": "1.0"
                }
        argumentDocs:
            description: '- (Optional) The description of the custom directory role.'
            display_name: '- (Required) The display name of the custom directory role.'
            enabled: '- (Required) Indicates whether the role is enabled for assignment.'
            object_id: '- The object ID of the custom directory role.'
            permissions: '- (Required) A collection of permissions blocks as documented below.'
            permissions.allowed_resource_actions: '- (Required) A set of tasks that can be performed on a resource. For more information, see the Permissions Reference documentation.'
            template_id: '- (Optional) Custom template identifier that is typically used if one needs an identifier to be the same across different directories. Changing this forces a new resource to be created.'
            version: '- (Required) - The version of the role definition. This can be any arbitrary string between 1-128 characters.'
        importStatements: []
    azuread_directory_role:
        subCategory: Directory Roles
        name: azuread_directory_role
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "Security administrator"
                }
              dependencies:
                azuread_directory_role_member.example: |-
                    {
                      "member_object_id": "${data.azuread_user.example.object_id}",
                      "role_object_id": "${azuread_directory_role.example.object_id}"
                    }
        argumentDocs:
            member_object_id: '- (Required) The object ID of the principal you want to add as a member to the directory role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.'
            role_object_id: '- (Required) The object ID of the directory role you want to add the member to. Changing this forces a new resource to be created.'
        importStatements:
            - terraform import azuread_directory_role_member.test 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111
    azuread_group:
        subCategory: Groups
        name: azuread_group
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "my_group",
                  "security_enabled": true
                }
              dependencies:
                azuread_group_member.example: |-
                    {
                      "group_object_id": "${azuread_group.example.id}",
                      "member_object_id": "${data.azuread_user.example.id}"
                    }
        argumentDocs:
            group_object_id: '- (Required) The object ID of the group you want to add the member to. Changing this forces a new resource to be created.'
            member_object_id: '- (Required) The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.'
        importStatements:
            - terraform import azuread_group_member.test 00000000-0000-0000-0000-000000000000/member/11111111-1111-1111-1111-111111111111
    azuread_invitation:
        subCategory: Invitations
        name: azuread_invitation
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "redirect_url": "https://portal.azure.com",
                  "user_email_address": "jdoe@hashicorp.com"
                }
            - name: example
              manifest: |-
                {
                  "message": [
                    {
                      "language": "en-US"
                    }
                  ],
                  "redirect_url": "https://portal.azure.com",
                  "user_email_address": "jdoe@hashicorp.com"
                }
            - name: example
              manifest: |-
                {
                  "message": [
                    {
                      "additional_recipients": [
                        "aaliceberg@hashicorp.com"
                      ],
                      "body": "Hello there! You are invited to join my Azure tenant!"
                    }
                  ],
                  "redirect_url": "https://portal.azure.com",
                  "user_display_name": "Bob Bobson",
                  "user_email_address": "bbobson@hashicorp.com"
                }
        argumentDocs:
            message: '- (Optional) A message block as documented below, which configures the message being sent to the invited user. If this block is omitted, no message will be sent.'
            message.additional_recipients: '- (Optional) Email addresses of additional recipients the invitation message should be sent to. Only 1 additional recipient is currently supported by Azure.'
            message.body: '- (Optional) Customized message body you want to send if you don''t want to send the default message. Cannot be specified with language.'
            message.language: '- (Optional) The language you want to send the default message in. The value specified must be in ISO 639 format. Defaults to en-US. Cannot be specified with body.'
            redeem_url: '- The URL the user can use to redeem their invitation.'
            redirect_url: '- (Required) The URL that the user should be redirected to once the invitation is redeemed.'
            user_display_name: '- (Optional) The display name of the user being invited.'
            user_email_address: '- (Required) The email address of the user being invited.'
            user_id: '- Object ID of the invited user.'
            user_type: '- (Optional) The user type of the user being invited. Must be one of Guest or Member. Only Global Administrators can invite users as members. Defaults to Guest.'
        importStatements: []
    azuread_named_location:
        subCategory: Conditional Access
        name: azuread_named_location
        title: ""
        examples:
            - name: example-ip
              manifest: |-
                {
                  "display_name": "IP Named Location",
                  "ip": [
                    {
                      "ip_ranges": [
                        "1.1.1.1/32",
                        "2.2.2.2/32"
                      ],
                      "trusted": true
                    }
                  ]
                }
            - name: example-country
              manifest: |-
                {
                  "country": [
                    {
                      "countries_and_regions": [
                        "GB",
                        "US"
                      ],
                      "include_unknown_countries_and_regions": false
                    }
                  ],
                  "display_name": "Country Named Location"
                }
        argumentDocs:
            country: '- (Optional) A country block as documented below, which configures a country-based named location.'
            country.countries_and_regions: '- (Required) List of countries and/or regions in two-letter format specified by ISO 3166-2.'
            country.include_unknown_countries_and_regions: '- (Optional) Whether IP addresses that don''t map to a country or region should be included in the named location. Defaults to false.'
            display_name: '- (Required) The friendly name for this named location.'
            id: '- The ID of the named location.'
            ip: '- (Optional) An ip block as documented below, which configures an IP-based named location.'
            ip.ip_ranges: '- (Required) List of IP address ranges in IPv4 CIDR format (e.g. 1.2.3.4/32) or any allowable IPv6 format from IETF RFC596.'
            ip.trusted: '- (Optional) Whether the named location is trusted. Defaults to false.'
        importStatements:
            - terraform import azuread_named_location.my_location 00000000-0000-0000-0000-000000000000
    azuread_service_principal:
        subCategory: Delegated Permission Grants
        name: azuread_service_principal
        title: ""
        examples:
            - name: msgraph
              manifest: |-
                {
                  "application_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}",
                  "use_existing": true
                }
              references:
                application_id: data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"openid\"]}",
                              "type": "Scope"
                            },
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.Read\"]}",
                              "type": "Scope"
                            }
                          ],
                          "resource_app_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}"
                        }
                      ]
                    }
                azuread_service_principal_delegated_permission_grant.example: |-
                    {
                      "claim_values": [
                        "openid",
                        "User.Read.All"
                      ],
                      "resource_service_principal_object_id": "${azuread_service_principal.msgraph.object_id}",
                      "service_principal_object_id": "${azuread_service_principal.example.object_id}"
                    }
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application.example.application_id}"
                }
              references:
                application_id: azuread_application.example.application_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"openid\"]}",
                              "type": "Scope"
                            },
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.Read\"]}",
                              "type": "Scope"
                            }
                          ],
                          "resource_app_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}"
                        }
                      ]
                    }
                azuread_service_principal_delegated_permission_grant.example: |-
                    {
                      "claim_values": [
                        "openid",
                        "User.Read.All"
                      ],
                      "resource_service_principal_object_id": "${azuread_service_principal.msgraph.object_id}",
                      "service_principal_object_id": "${azuread_service_principal.example.object_id}"
                    }
            - name: msgraph
              manifest: |-
                {
                  "application_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}",
                  "use_existing": true
                }
              references:
                application_id: data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"openid\"]}",
                              "type": "Scope"
                            },
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.Read\"]}",
                              "type": "Scope"
                            }
                          ],
                          "resource_app_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}"
                        }
                      ]
                    }
                azuread_service_principal_delegated_permission_grant.example: |-
                    {
                      "claim_values": [
                        "openid",
                        "User.Read.All"
                      ],
                      "resource_service_principal_object_id": "${azuread_service_principal.msgraph.object_id}",
                      "service_principal_object_id": "${azuread_service_principal.example.object_id}",
                      "user_object_id": "${azuread_user.example.object_id}"
                    }
                azuread_user.example: |-
                    {
                      "display_name": "J. Doe",
                      "mail_nickname": "jdoe",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "jdoe@hashicorp.com"
                    }
            - name: example
              manifest: |-
                {
                  "application_id": "${azuread_application.example.application_id}"
                }
              references:
                application_id: azuread_application.example.application_id
              dependencies:
                azuread_application.example: |-
                    {
                      "display_name": "example",
                      "required_resource_access": [
                        {
                          "resource_access": [
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"openid\"]}",
                              "type": "Scope"
                            },
                            {
                              "id": "${azuread_service_principal.msgraph.oauth2_permission_scope_ids[\"User.Read\"]}",
                              "type": "Scope"
                            }
                          ],
                          "resource_app_id": "${data.azuread_application_published_app_ids.well_known.result.MicrosoftGraph}"
                        }
                      ]
                    }
                azuread_service_principal_delegated_permission_grant.example: |-
                    {
                      "claim_values": [
                        "openid",
                        "User.Read.All"
                      ],
                      "resource_service_principal_object_id": "${azuread_service_principal.msgraph.object_id}",
                      "service_principal_object_id": "${azuread_service_principal.example.object_id}",
                      "user_object_id": "${azuread_user.example.object_id}"
                    }
                azuread_user.example: |-
                    {
                      "display_name": "J. Doe",
                      "mail_nickname": "jdoe",
                      "password": "SecretP@sswd99!",
                      "user_principal_name": "jdoe@hashicorp.com"
                    }
        argumentDocs:
            claim_values: '- (Required) - A set of claim values for delegated permission scopes which should be included in access tokens for the resource.'
            id: '- The ID of the delegated permission grant.'
            resource_service_principal_object_id: '- (Required) The object ID of the service principal representing the resource to be accessed. Changing this forces a new resource to be created.'
            service_principal_object_id: '- (Required) The object ID of the service principal for which this delegated permission grant should be created. Changing this forces a new resource to be created.'
            user_object_id: '- (Optional) - The object ID of the user on behalf of whom the service principal is authorized to access the resource. When omitted, the delegated permission grant will be consented for all users. Changing this forces a new resource to be created.'
        importStatements:
            - terraform import azuread_service_principal_delegated_permission_grant.example aaBBcDDeFG6h5JKLMN2PQrrssTTUUvWWxxxxxyyyzzz
    azuread_service_principal_claims_mapping_policy_assignment:
        subCategory: Service Principals
        name: azuread_service_principal_claims_mapping_policy_assignment
        title: ""
        examples:
            - name: app
              manifest: |-
                {
                  "claims_mapping_policy_id": "${azuread_claims_mapping_policy.my_policy.id}",
                  "service_principal_id": "${azuread_service_principal.my_principal.id}"
                }
              references:
                claims_mapping_policy_id: azuread_claims_mapping_policy.my_policy.id
                service_principal_id: azuread_service_principal.my_principal.id
        argumentDocs:
            claims_mapping_policy_id: '- (Required) The ID of the claims mapping policy to assign.'
            id: '- The ID of the Claims Mapping Policy Assignment.'
            service_principal_id: '- (Required) The object ID of the service principal for the policy assignment.'
        importStatements:
            - terraform import azuread_service_principal_claims_mapping_policy_assignment.app 00000000-0000-0000-0000-000000000000/claimsMappingPolicy/11111111-0000-0000-0000-000000000000
    azuread_user:
        subCategory: Users
        name: azuread_user
        title: ""
        examples:
            - name: example
              manifest: |-
                {
                  "display_name": "J. Doe",
                  "mail_nickname": "jdoe",
                  "password": "SecretP@sswd99!",
                  "user_principal_name": "jdoe@hashicorp.com"
                }
        argumentDocs:
            account_enabled: '- (Optional) Whether or not the account should be enabled.'
            age_group: '- (Optional) The age group of the user. Supported values are Adult, NotAdult and Minor. Omit this property or specify a blank string to unset.'
            business_phones: '- (Optional) A list of telephone numbers for the user. Only one number can be set for this property. Read-only for users synced with Azure AD Connect.'
            city: '- (Optional) The city in which the user is located.'
            company_name: '- (Optional) The company name which the user is associated. This property can be useful for describing the company that an external user comes from.'
            consent_provided_for_minor: '- (Optional) Whether consent has been obtained for minors. Supported values are Granted, Denied and NotRequired. Omit this property or specify a blank string to unset.'
            cost_center: '- (Optional) The cost center associated with the user.'
            country: '- (Optional) The country/region in which the user is located, e.g. US or UK.'
            creation_type: '- Indicates whether the user account was created as a regular school or work account (null), an external account (Invitation), a local account for an Azure Active Directory B2C tenant (LocalAccount) or self-service sign-up using email verification (EmailVerified).'
            department: '- (Optional) The name for the department in which the user works.'
            disable_password_expiration: '- (Optional) Whether the user''s password is exempt from expiring. Defaults to false.'
            disable_strong_password: '- (Optional) Whether the user is allowed weaker passwords than the default policy to be specified. Defaults to false.'
            display_name: '- (Required) The name to display in the address book for the user.'
            division: '- (Optional) The name of the division in which the user works.'
            employee_id: '- (Optional) The employee identifier assigned to the user by the organisation.'
            employee_type: '- (Optional) Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor.'
            external_user_state: '- For an external user invited to the tenant, this property represents the invited user''s invitation status. Possible values are PendingAcceptance or Accepted.'
            fax_number: '- (Optional) The fax number of the user.'
            force_password_change: '- (Optional) Whether the user is forced to change the password during the next sign-in. Only takes effect when also changing the password. Defaults to false.'
            given_name: '- (Optional) The given name (first name) of the user.'
            im_addresses: '- A list of instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user.'
            job_title: '- (Optional) The user’s job title.'
            mail: '- (Optional) The SMTP address for the user. This property cannot be unset once specified.'
            mail_nickname: '- (Optional) The mail alias for the user. Defaults to the user name part of the user principal name (UPN).'
            manager_id: '- (Optional) The object ID of the user''s manager.'
            mobile_phone: '- (Optional) The primary cellular telephone number for the user.'
            object_id: '- The object ID of the user.'
            office_location: '- (Optional) The office location in the user''s place of business.'
            onpremises_distinguished_name: '- The on-premises distinguished name (DN) of the user, synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_domain_name: '- The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_immutable_id: '- (Optional) The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user''s user_principal_name property when creating a new user account.'
            onpremises_sam_account_name: '- The on-premise SAM account name of the user.'
            onpremises_security_identifier: '- The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.'
            onpremises_sync_enabled: '- Whether this user is synchronised from an on-premises directory (true), no longer synchronised (false), or has never been synchronised (null).'
            onpremises_user_principal_name: '- The on-premise user principal name of the user.'
            other_mails: '- (Optional) A list of additional email addresses for the user.'
            password: '- (Optional) The password for the user. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters. This property is required when creating a new user.'
            postal_code: '- (Optional) The postal code for the user''s postal address. The postal code is specific to the user''s country/region. In the United States of America, this attribute contains the ZIP code.'
            preferred_language: '- (Optional) The user''s preferred language, in ISO 639-1 notation.'
            proxy_addresses: '- List of email addresses for the user that direct to the same mailbox.'
            show_in_address_list: '- (Optional) Whether or not the Outlook global address list should include this user. Defaults to true.'
            state: '- (Optional) The state or province in the user''s address.'
            street_address: '- (Optional) The street address of the user''s place of business.'
            surname: '- (Optional) The user''s surname (family name or last name).'
            usage_location: '- (Optional) The usage location of the user. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: NO, JP, and GB. Cannot be reset to null once set.'
            user_principal_name: '- (Required) The user principal name (UPN) of the user.'
            user_type: '- The user type in the directory. Possible values are Guest or Member.'
        importStatements:
            - terraform import azuread_user.my_user 00000000-0000-0000-0000-000000000000
